{"ast":null,"code":"export var Scheme;\n(function (Scheme) {\n  Scheme[\"BRIGHT_LIGHT\"] = \"bright_light\";\n  Scheme[\"SPACE_GRAY\"] = \"space_gray\";\n  Scheme[\"VKCOM_LIGHT\"] = \"vkcom_light\";\n  Scheme[\"VKCOM_DARK\"] = \"vkcom_dark\";\n})(Scheme || (Scheme = {}));\nexport var Appearance;\n(function (Appearance) {\n  Appearance[\"DARK\"] = \"dark\";\n  Appearance[\"LIGHT\"] = \"light\";\n})(Appearance || (Appearance = {}));\nexport var deriveAppearance = function (scheme) {\n  return scheme === Scheme.SPACE_GRAY || scheme === Scheme.VKCOM_DARK ? \"dark\" : \"light\";\n};\nexport function resolveAppearance(data) {\n  var scheme = data.scheme,\n    appearance = data.appearance;\n  // appearance пока приходит только на IOS и ANDROID\n  if (appearance) {\n    return appearance;\n  }\n  // Проверяем scheme если appearance не пришел\n  return deriveAppearance(scheme);\n}","map":{"version":3,"names":["Scheme","Appearance","deriveAppearance","scheme","SPACE_GRAY","VKCOM_DARK","resolveAppearance","data","appearance"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/helpers/appearance.ts"],"sourcesContent":["import { AppearanceSchemeType, AppearanceType } from '@vkontakte/vk-bridge';\n\nexport enum Scheme {\n  BRIGHT_LIGHT = 'bright_light',\n  SPACE_GRAY = 'space_gray',\n  VKCOM_LIGHT = 'vkcom_light',\n  VKCOM_DARK = 'vkcom_dark',\n}\n\nexport type AppearanceScheme = AppearanceSchemeType | Scheme.VKCOM_DARK | Scheme.VKCOM_LIGHT;\n\nexport enum Appearance {\n  DARK = 'dark',\n  LIGHT = 'light',\n}\n\nexport const deriveAppearance = (scheme: AppearanceScheme | undefined): AppearanceType =>\n  scheme === Scheme.SPACE_GRAY || scheme === Scheme.VKCOM_DARK ? 'dark' : 'light';\n\nexport interface VKBridgeConfigData {\n  appearance?: AppearanceType;\n  scheme: AppearanceScheme;\n}\n\nexport function resolveAppearance(data: VKBridgeConfigData): AppearanceType | null {\n  const { scheme, appearance } = data;\n\n  // appearance пока приходит только на IOS и ANDROID\n  if (appearance) {\n    return appearance;\n  }\n\n  // Проверяем scheme если appearance не пришел\n  return deriveAppearance(scheme);\n}\n"],"mappings":"WAEOA,MAAA;WAAKA,MAAM;EAANA,MAAA,CACV,kBAAe;EADLA,MAAA,CAEV,gBAAa;EAFHA,MAAA,CAGV,iBAAc;EAHJA,MAAA,CAIV,gBAAa;GAJHA,MAAA,KAAAA,MAAA;WASLC,UAAA;WAAKA,UAAU;EAAVA,UAAA,CACV,UAAO;EADGA,UAAA,CAEV,WAAQ;GAFEA,UAAA,KAAAA,UAAA;AAKZ,OAAO,IAAMC,gBAAA,GAAmB,SAAAA,CAACC,MAAA;SAC/BA,MAAA,KAAWH,MAAA,CAAOI,UAAU,IAAID,MAAA,KAAWH,MAAA,CAAOK,UAAU,GAAG,SAAS;;AAO1E,OAAO,SAASC,kBAAkBC,IAAwB;EACxD,IAAQJ,MAAA,GAAuBI,IAAA,CAAvBJ,MAAA;IAAQK,UAAA,GAAeD,IAAA,CAAfC,UAAA;EAEhB;EACA,IAAIA,UAAA,EAAY;IACd,OAAOA,UAAA;EACT;EAEA;EACA,OAAON,gBAAA,CAAiBC,MAAA;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}