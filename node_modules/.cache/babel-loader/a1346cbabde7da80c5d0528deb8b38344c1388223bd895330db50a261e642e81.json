{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { HoverPopper } from \"../HoverPopper/HoverPopper\";\n/**\n * @see https://vkcom.github.io/VKUI/#/RichTooltip\n */\nexport var RichTooltip = function (_param) {\n  var children = _param.children,\n    _param_arrow = _param.arrow,\n    arrow = _param_arrow === void 0 ? true : _param_arrow,\n    _param_appearance = _param.appearance,\n    appearance = _param_appearance === void 0 ? \"neutral\" : _param_appearance,\n    className = _param.className,\n    popperProps = _object_without_properties(_param, [\"children\", \"arrow\", \"appearance\", \"className\"]);\n  return /*#__PURE__*/React.createElement(HoverPopper, _object_spread({\n    className: classNames(\"vkuiRichTooltip\", appearance !== \"neutral\" && {\n      accent: \"vkuiRichTooltip--appearance-accent\",\n      white: \"vkuiRichTooltip--appearance-white\",\n      black: \"vkuiRichTooltip--appearance-black\",\n      inversion: \"vkuiRichTooltip--appearance-inversion\"\n    }[appearance], className),\n    arrow: arrow,\n    arrowClassName: \"vkuiRichTooltip__arrow\"\n  }, popperProps), children);\n};","map":{"version":3,"names":["React","classNames","HoverPopper","RichTooltip","_param","children","_param_arrow","arrow","_param_appearance","appearance","className","popperProps","_object_without_properties","createElement","_object_spread","accent","white","black","inversion","arrowClassName"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/components/RichTooltip/RichTooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { HoverPopper, HoverPopperProps } from '../HoverPopper/HoverPopper';\nimport styles from './RichTooltip.module.css';\n\nexport interface RichTooltipProps extends Omit<HoverPopperProps, 'arrowClassName'> {\n  /**\n   * Стиль отображения подсказки\n   */\n  appearance?: 'accent' | 'neutral' | 'white' | 'black' | 'inversion';\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichTooltip\n */\nexport const RichTooltip = ({\n  children,\n  arrow = true,\n  appearance = 'neutral',\n  className,\n  ...popperProps\n}: RichTooltipProps) => {\n  return (\n    <HoverPopper\n      className={classNames(\n        styles['RichTooltip'],\n        appearance !== 'neutral' &&\n          {\n            accent: styles['RichTooltip--appearance-accent'],\n            white: styles['RichTooltip--appearance-white'],\n            black: styles['RichTooltip--appearance-black'],\n            inversion: styles['RichTooltip--appearance-inversion'],\n          }[appearance],\n        className,\n      )}\n      arrow={arrow}\n      arrowClassName={styles['RichTooltip__arrow']}\n      {...popperProps}\n    >\n      {children}\n    </HoverPopper>\n  );\n};\n"],"mappings":";;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAC3B,SAASC,WAAW,QAA0B;AAU9C;;;AAGA,OAAO,IAAMC,WAAA,GAAc,SAAAA,CAAAC,MAAA;MACzBC,QAAA,GAAAD,MAAA,CAAAC,QAAA;IAAAC,YAAA,GAAAF,MAAA,CACAG,KAAA;IAAAA,KAAA,GAAAD,YAAA,cAAQ,OAAAA,YAAA;IAAAE,iBAAA,GAAAJ,MAAA,CACRK,UAAA;IAAAA,UAAA,GAAAD,iBAAA,cAAa,YAAAA,iBAAA;IACbE,SAAA,GAAAN,MAAA,CAAAM,SAAA;IACGC,WAAA,GAAAC,0BAAA,CAAAR,MAAA,GAJH,YACA,SACA,cACA,Y;EAGA,oBACEJ,KAAA,CAAAa,aAAA,CAACX,WAAA,EAAAY,cAAA;IACCJ,SAAA,EAAWT,UAAA,oBAETQ,UAAA,KAAe,aACb;MACEM,MAAM;MACNC,KAAK;MACLC,KAAK;MACLC,SAAS;IACX,EAAET,UAAA,CAAW,EACfC,SAAA;IAEFH,KAAA,EAAOA,KAAA;IACPY,cAAc;KACVR,WAAA,GAEHN,QAAA;AAGP"},"metadata":{},"sourceType":"module","externalDependencies":[]}