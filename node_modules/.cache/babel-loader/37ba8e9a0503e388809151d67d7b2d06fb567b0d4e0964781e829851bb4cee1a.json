{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport { classNames, noop } from \"@vkontakte/vkjs\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useWaitTransitionFinish } from \"../../hooks/useWaitTransitionFinish\";\nimport { blurActiveElement, canUseDOM, useDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { Platform } from \"../../lib/platform\";\nimport { animationEvent } from \"../../lib/supportEvents\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { useScroll } from \"../AppRoot/ScrollContext\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { NavTransitionProvider } from \"../NavTransitionContext/NavTransitionContext\";\nimport { useSplitCol } from \"../SplitCol/SplitColContext\";\nimport { Touch } from \"../Touch/Touch\";\nimport { swipeBackExcluded } from \"./utils\";\nvar SWIPE_BACK_AREA = 70;\nvar SwipeBackResults;\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\nexport var scrollsCache = {};\nvar warn = warnOnce(\"View\");\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport var View = function (_param) {\n  var activePanelProp = _param.activePanel,\n    history = _param.history,\n    nav = _param.nav,\n    onTransition = _param.onTransition,\n    onSwipeBack = _param.onSwipeBack,\n    onSwipeBackStart = _param.onSwipeBackStart,\n    onSwipeBackCancelProp = _param.onSwipeBackCancel,\n    children = _param.children,\n    className = _param.className,\n    restProps = _object_without_properties(_param, [\"activePanel\", \"history\", \"nav\", \"onTransition\", \"onSwipeBack\", \"onSwipeBackStart\", \"onSwipeBackCancel\", \"children\", \"className\"]);\n  var _configProvider, _splitCol;\n  var scrolls = React.useRef(scrollsCache[getNavId({\n    nav: nav,\n    id: restProps.id\n  })] || {});\n  var afterTransition = React.useRef(noop);\n  React.useEffect(function () {\n    return function () {\n      var id = getNavId({\n        nav: nav,\n        id: restProps.id\n      });\n      if (id) {\n        scrollsCache[id] = scrolls.current;\n      }\n    };\n  });\n  var panelNodes = React.useRef({});\n  var _useDOM = useDOM(),\n    window = _useDOM.window,\n    document = _useDOM.document;\n  var scroll = useScroll();\n  var configProvider = useConfigProvider();\n  var splitCol = useSplitCol();\n  var platform = usePlatform();\n  var _React_useState = _sliced_to_array(React.useState(false), 2),\n    animated = _React_useState[0],\n    setAnimated = _React_useState[1];\n  var _React_useState1 = _sliced_to_array(React.useState([activePanelProp]), 2),\n    visiblePanels = _React_useState1[0],\n    setVisiblePanels = _React_useState1[1];\n  var _React_useState2 = _sliced_to_array(React.useState(activePanelProp), 2),\n    activePanel = _React_useState2[0],\n    setActivePanel = _React_useState2[1];\n  var _React_useState3 = _sliced_to_array(React.useState(undefined), 2),\n    isBack = _React_useState3[0],\n    setIsBack = _React_useState3[1];\n  var _React_useState4 = _sliced_to_array(React.useState(null), 2),\n    prevPanel = _React_useState4[0],\n    setPrevPanel = _React_useState4[1];\n  var _React_useState5 = _sliced_to_array(React.useState(null), 2),\n    nextPanel = _React_useState5[0],\n    setNextPanel = _React_useState5[1];\n  var _React_useState6 = _sliced_to_array(React.useState(false), 2),\n    swipingBack = _React_useState6[0],\n    setSwipingBack = _React_useState6[1];\n  var _React_useState7 = _sliced_to_array(React.useState(false), 2),\n    swipeBackPrevented = _React_useState7[0],\n    setSwipeBackPrevented = _React_useState7[1];\n  var _React_useState8 = _sliced_to_array(React.useState(0), 2),\n    swipeBackStartX = _React_useState8[0],\n    setSwipeBackStartX = _React_useState8[1];\n  var _React_useState9 = _sliced_to_array(React.useState(0), 2),\n    swipeBackShift = _React_useState9[0],\n    setSwipeBackShift = _React_useState9[1];\n  var _React_useState10 = _sliced_to_array(React.useState(null), 2),\n    swipeBackNextPanel = _React_useState10[0],\n    setSwipeBackNextPanel = _React_useState10[1];\n  var _React_useState11 = _sliced_to_array(React.useState(null), 2),\n    swipeBackPrevPanel = _React_useState11[0],\n    setSwipeBackPrevPanel = _React_useState11[1];\n  var _React_useState12 = _sliced_to_array(React.useState(null), 2),\n    swipeBackResult = _React_useState12[0],\n    setSwipeBackResult = _React_useState12[1];\n  var _React_useState13 = _sliced_to_array(React.useState(false), 2),\n    browserSwipe = _React_useState13[0],\n    setBrowserSwipe = _React_useState13[1];\n  var prevActivePanel = usePrevious(activePanelProp);\n  var prevSwipingBack = usePrevious(swipingBack);\n  var prevBrowserSwipe = usePrevious(browserSwipe);\n  var prevSwipeBackResult = usePrevious(swipeBackResult);\n  var prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  var prevOnTransition = usePrevious(onTransition);\n  var panels = React.Children.toArray(children).filter(function (panel) {\n    var panelId = getNavId(panel.props, warn);\n    return panelId !== undefined && visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n  });\n  var disableAnimation = ((_configProvider = configProvider) === null || _configProvider === void 0 ? void 0 : _configProvider.transitionMotionEnabled) === false || !((_splitCol = splitCol) === null || _splitCol === void 0 ? void 0 : _splitCol.animate) || platform === Platform.VKCOM;\n  var pickPanel = function (id) {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n  var flushTransition = React.useCallback(function (prevPanel, isBackTransition) {\n    if (isBackTransition) {\n      scrolls.current[prevPanel] = 0;\n    }\n    setPrevPanel(null);\n    setNextPanel(null);\n    setVisiblePanels([activePanelProp]);\n    setActivePanel(activePanelProp);\n    setAnimated(false);\n    setIsBack(undefined);\n    afterTransition.current = function () {\n      var _scroll;\n      (_scroll = scroll) === null || _scroll === void 0 ? void 0 : _scroll.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n      onTransition && onTransition({\n        isBack: isBackTransition,\n        from: prevPanel,\n        to: activePanelProp\n      });\n    };\n  }, [activePanelProp, onTransition, scroll]);\n  useIsomorphicLayoutEffect(function () {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n  var transitionEndHandler = React.useCallback(function (e) {\n    if ((!e || [\"vkuivkui-animation-ios-next-forward\", \"vkuivkui-animation-ios-prev-back\", \"vkuivkui-animation-view-next-forward\", \"vkuivkui-animation-view-prev-back\"].includes(e.animationName)) && prevPanel !== null) {\n      flushTransition(prevPanel, Boolean(isBack));\n    }\n  }, [flushTransition, isBack, prevPanel]);\n  var waitTransitionFinish = useWaitTransitionFinish().waitTransitionFinish;\n  var animationFinishTimeout = useTimeout(transitionEndHandler, platform === Platform.IOS ? 600 : 300);\n  var onSwipeBackSuccess = React.useCallback(function () {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n  var onSwipeBackCancel = React.useCallback(function () {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n  var swipingBackTransitionEndHandler = React.useCallback(function (e) {\n    var _e, _e1;\n    // indexOf because of vendor prefixes in old browsers\n    if (!e || ((_e = e) === null || _e === void 0 ? void 0 : _e.propertyName.includes(\"transform\")) && ((_e1 = e) === null || _e1 === void 0 ? void 0 : _e1.target) === pickPanel(swipeBackNextPanel)) {\n      switch (swipeBackResult) {\n        case SwipeBackResults.fail:\n          onSwipeBackCancel();\n          break;\n        case SwipeBackResults.success:\n          onSwipeBackSuccess();\n      }\n    }\n  }, [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult]);\n  var onMoveX = function (event) {\n    var _configProvider;\n    if (platform !== Platform.IOS || swipeBackPrevented || swipeBackExcluded(event) || disableAnimation) {\n      return;\n    }\n    if (!((_configProvider = configProvider) === null || _configProvider === void 0 ? void 0 : _configProvider.isWebView)) {\n      if ((event.startX <= SWIPE_BACK_AREA || event.startX >= window.innerWidth - SWIPE_BACK_AREA) && !browserSwipe) {\n        setBrowserSwipe(true);\n      }\n      return;\n    }\n    if (!onSwipeBack || animated && event.startX <= SWIPE_BACK_AREA) {\n      return;\n    }\n    if (!swipingBack && event.startX <= SWIPE_BACK_AREA && history && history.length > 1) {\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        var payload = onSwipeBackStart(activePanel);\n        if (payload === \"prevent\") {\n          setSwipeBackPrevented(true);\n          return;\n        }\n      }\n      if (activePanel !== null) {\n        var _scroll;\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = (_scroll = scroll) === null || _scroll === void 0 ? void 0 : _scroll.getScroll().y;\n      }\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n    if (swipingBack) {\n      var swipeBackShift = 0;\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > window.innerWidth - swipeBackStartX) {\n        swipeBackShift = window.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n      setSwipeBackShift(swipeBackShift);\n    }\n  };\n  var onEnd = React.useCallback(function (event) {\n    if (swipingBack) {\n      var speed = swipeBackShift / event.duration * 1000;\n      var _window_innerWidth;\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= ((_window_innerWidth = window.innerWidth) !== null && _window_innerWidth !== void 0 ? _window_innerWidth : 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackStartX + swipeBackShift > window.innerWidth / 2) {\n        setSwipeBackResult(SwipeBackResults.success);\n      } else {\n        setSwipeBackResult(SwipeBackResults.fail);\n      }\n    }\n    if (swipeBackPrevented) {\n      setSwipeBackPrevented(false);\n    }\n  }, [onSwipeBackCancel, onSwipeBackSuccess, swipeBackShift, swipeBackStartX, swipingBack, swipeBackPrevented, window]);\n  var calcPanelSwipeStyles = function (panelId) {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n    var isPrev = panelId === swipeBackPrevPanel;\n    var isNext = panelId === swipeBackNextPanel;\n    if (!isPrev && !isNext || swipeBackResult) {\n      return {};\n    }\n    var prevPanelTranslate = \"\".concat(swipeBackShift, \"px\");\n    var nextPanelTranslate = \"\".concat(-50 + swipeBackShift * 100 / window.innerWidth / 2, \"%\");\n    var prevPanelShadow = 0.3 * (window.innerWidth - swipeBackShift) / window.innerWidth;\n    if (swipeBackResult) {\n      return isPrev ? {\n        boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n      } : {};\n    }\n    if (isNext) {\n      return {\n        transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n        WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n        WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n        boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n      };\n    }\n    return {};\n  };\n  React.useEffect(function () {\n    // Нужен переход\n    if (prevActivePanel && prevActivePanel !== activePanelProp && !prevSwipingBack && !prevBrowserSwipe) {\n      var _scroll;\n      var firstLayerId = React.Children.toArray(children).map(function (panel) {\n        return getNavId(panel.props, warn);\n      }).find(function (id) {\n        return id === prevActivePanel || id === activePanelProp;\n      });\n      var isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = (_scroll = scroll) === null || _scroll === void 0 ? void 0 : _scroll.getScroll().y;\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      var nextPanel = activePanelProp;\n      var prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n      afterTransition.current = function () {\n        if (nextPanel !== null) {\n          var _scroll;\n          (_scroll = scroll) === null || _scroll === void 0 ? void 0 : _scroll.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition && prevOnTransition({\n          isBack: true,\n          from: prevPanel,\n          to: nextPanel\n        });\n      };\n    }\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(pickPanel(swipeBackNextPanel), swipingBackTransitionEndHandler, platform === Platform.IOS ? 600 : 300);\n    }\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      var _scroll1;\n      (_scroll1 = scroll) === null || _scroll1 === void 0 ? void 0 : _scroll1.scrollTo(0, scrolls.current[activePanel]);\n    }\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [activePanelProp, activePanel, animationFinishTimeout, browserSwipe, children, disableAnimation, document, flushTransition, onSwipeBackStart, panels, platform, prevActivePanel, prevBrowserSwipe, prevOnTransition, prevSwipeBackPrevPanel, prevSwipeBackResult, prevSwipingBack, scroll, swipeBackNextPanel, swipeBackResult, swipingBack, swipingBackTransitionEndHandler, waitTransitionFinish]);\n  return /*#__PURE__*/React.createElement(Touch, _object_spread_props(_object_spread({\n    Component: \"section\"\n  }, restProps), {\n    className: classNames(\"vkuiView\", platform === Platform.IOS && classNames(\"vkuiView--ios\", \"vkuiInternalView--ios\"), !disableAnimation && animated && \"vkuiView--animated\", !disableAnimation && swipingBack && \"vkuiView--swiping-back\", disableAnimation && \"vkuiView--no-motion\", className),\n    onMoveX: onMoveX,\n    onEnd: onEnd\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiView__panels\"\n  }, panels.map(function (panel) {\n    var panelId = getNavId(panel.props, warn);\n    var isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n    var isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n    var compensateScroll = isPrev || panelId === swipeBackNextPanel || panelId === nextPanel && isBack;\n    var _scrolls_current_panelId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiView__panel\", panelId === activePanel && \"vkuiView__panel--active\", panelId === prevPanel && \"vkuiView__panel--prev\", panelId === nextPanel && \"vkuiView__panel--next\", panelId === swipeBackPrevPanel && \"vkuiView__panel--swipe-back-prev\", panelId === swipeBackNextPanel && \"vkuiView__panel--swipe-back-next\", swipeBackResult === SwipeBackResults.success && \"vkuiView__panel--swipe-back-success\", swipeBackResult === SwipeBackResults.fail && \"vkuiView__panel--swipe-back-failed\"),\n      onAnimationEnd: isTransitionTarget ? transitionEndHandler : undefined,\n      ref: function (el) {\n        return panelId !== undefined && (panelNodes.current[panelId] = el);\n      },\n      style: calcPanelSwipeStyles(panelId),\n      key: panelId\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiView__panel-in\",\n      style: {\n        marginTop: compensateScroll ? -((_scrolls_current_panelId = scrolls.current[panelId]) !== null && _scrolls_current_panelId !== void 0 ? _scrolls_current_panelId : 0) : undefined\n      }\n    }, /*#__PURE__*/React.createElement(NavTransitionProvider, {\n      entering: panelId === nextPanel || panelId === swipeBackNextPanel\n    }, panel)));\n  })));\n};","map":{"version":3,"names":["React","classNames","noop","usePlatform","usePrevious","useTimeout","useWaitTransitionFinish","blurActiveElement","canUseDOM","useDOM","getNavId","Platform","animationEvent","useIsomorphicLayoutEffect","warnOnce","useScroll","useConfigProvider","NavTransitionProvider","useSplitCol","Touch","swipeBackExcluded","SWIPE_BACK_AREA","SwipeBackResults","scrollsCache","warn","View","_param","activePanelProp","activePanel","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancelProp","onSwipeBackCancel","children","className","restProps","_object_without_properties","_configProvider","_splitCol","scrolls","useRef","id","afterTransition","useEffect","current","panelNodes","_useDOM","window","document","scroll","configProvider","splitCol","platform","_React_useState","_sliced_to_array","useState","animated","setAnimated","_React_useState1","visiblePanels","setVisiblePanels","_React_useState2","setActivePanel","_React_useState3","undefined","isBack","setIsBack","_React_useState4","prevPanel","setPrevPanel","_React_useState5","nextPanel","setNextPanel","_React_useState6","swipingBack","setSwipingBack","_React_useState7","swipeBackPrevented","setSwipeBackPrevented","_React_useState8","swipeBackStartX","setSwipeBackStartX","_React_useState9","swipeBackShift","setSwipeBackShift","_React_useState10","swipeBackNextPanel","setSwipeBackNextPanel","_React_useState11","swipeBackPrevPanel","setSwipeBackPrevPanel","_React_useState12","swipeBackResult","setSwipeBackResult","_React_useState13","browserSwipe","setBrowserSwipe","prevActivePanel","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","VKCOM","pickPanel","flushTransition","useCallback","isBackTransition","_scroll","scrollTo","from","to","transitionEndHandler","e","animationName","Boolean","waitTransitionFinish","animationFinishTimeout","IOS","onSwipeBackSuccess","swipingBackTransitionEndHandler","_e","_e1","propertyName","target","fail","success","onMoveX","event","isWebView","startX","innerWidth","length","payload","getScroll","y","slice","shiftX","onEnd","speed","duration","_window_innerWidth","calcPanelSwipeStyles","isPrev","isNext","prevPanelTranslate","concat","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","firstLayerId","map","find","supported","set","_scroll1","createElement","_object_spread_props","_object_spread","Component","isTransitionTarget","compensateScroll","_scrolls_current_panelId","onAnimationEnd","ref","el","style","key","marginTop","entering"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { blurActiveElement, canUseDOM, useDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { useSplitCol } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { swipeBackExcluded } from './utils';\nimport styles from './View.module.css';\n\nconst SWIPE_BACK_AREA = 70;\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends React.HTMLAttributes<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n\n  children: React.ReactElement | Iterable<React.ReactElement>;\n}\n\nexport interface ViewState {\n  animated: boolean;\n\n  visiblePanels: string[];\n  activePanel: string | null;\n  isBack: boolean | undefined;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const scrolls = React.useRef(scrollsCache[getNavId({ nav, id: restProps.id }) as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    const id = getNavId({ nav, id: restProps.id });\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const [swipingBack, setSwipingBack] = React.useState<boolean>(false);\n  const [swipeBackPrevented, setSwipeBackPrevented] = React.useState<boolean>(false);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    configProvider?.transitionMotionEnabled === false ||\n    !splitCol?.animate ||\n    platform === Platform.VKCOM;\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(undefined);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            styles['vkui-animation-ios-next-forward'],\n            styles['vkui-animation-ios-prev-back'],\n            styles['vkui-animation-view-next-forward'],\n            styles['vkui-animation-view-prev-back'],\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === Platform.IOS ? 600 : 300,\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const onMoveX = (event: TouchEvent): void => {\n    if (\n      platform !== Platform.IOS ||\n      swipeBackPrevented ||\n      swipeBackExcluded(event) ||\n      disableAnimation\n    ) {\n      return;\n    }\n\n    if (!configProvider?.isWebView) {\n      if (\n        (event.startX <= SWIPE_BACK_AREA || event.startX >= window!.innerWidth - SWIPE_BACK_AREA) &&\n        !browserSwipe\n      ) {\n        setBrowserSwipe(true);\n      }\n\n      return;\n    }\n\n    if (!onSwipeBack || (animated && event.startX <= SWIPE_BACK_AREA)) {\n      return;\n    }\n\n    if (!swipingBack && event.startX <= SWIPE_BACK_AREA && history && history.length > 1) {\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          setSwipeBackPrevented(true);\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      let swipeBackShift = 0;\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        swipeBackShift = window!.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n      setSwipeBackShift(swipeBackShift);\n    }\n  };\n\n  const onEnd = React.useCallback(\n    (event: TouchEvent): void => {\n      if (swipingBack) {\n        const speed = (swipeBackShift / event.duration) * 1000;\n        if (swipeBackShift === 0) {\n          onSwipeBackCancel();\n        } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n          onSwipeBackSuccess();\n        } else if (speed > 250 || swipeBackStartX + swipeBackShift > window!.innerWidth / 2) {\n          setSwipeBackResult(SwipeBackResults.success);\n        } else {\n          setSwipeBackResult(SwipeBackResults.fail);\n        }\n      }\n      if (swipeBackPrevented) {\n        setSwipeBackPrevented(false);\n      }\n    },\n    [\n      onSwipeBackCancel,\n      onSwipeBackSuccess,\n      swipeBackShift,\n      swipeBackStartX,\n      swipingBack,\n      swipeBackPrevented,\n      window,\n    ],\n  );\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n    let prevPanelShadow = (0.3 * (window.innerWidth - swipeBackShift)) / window.innerWidth;\n\n    if (swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === Platform.IOS ? 600 : 300,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      scroll?.scrollTo(0, scrolls.current[activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    onSwipeBackStart,\n    panels,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBack,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  return (\n    <Touch\n      Component=\"section\"\n      {...restProps}\n      className={classNames(\n        styles['View'],\n        platform === Platform.IOS && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n        !disableAnimation && animated && styles['View--animated'],\n        !disableAnimation && swipingBack && styles['View--swiping-back'],\n        disableAnimation && styles['View--no-motion'],\n        className,\n      )}\n      onMoveX={onMoveX}\n      onEnd={onEnd}\n    >\n      <div className={styles['View__panels']}>\n        {panels.map((panel: React.ReactElement) => {\n          const panelId = getNavId(panel.props, warn);\n          const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n          const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n          const compensateScroll =\n            isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n          return (\n            <div\n              className={classNames(\n                styles['View__panel'],\n                panelId === activePanel && styles['View__panel--active'],\n                panelId === prevPanel && styles['View__panel--prev'],\n                panelId === nextPanel && styles['View__panel--next'],\n                panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                swipeBackResult === SwipeBackResults.success &&\n                  styles['View__panel--swipe-back-success'],\n                swipeBackResult === SwipeBackResults.fail &&\n                  styles['View__panel--swipe-back-failed'],\n              )}\n              onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n              ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n              style={calcPanelSwipeStyles(panelId)}\n              key={panelId}\n            >\n              <div\n                className={styles['View__panel-in']}\n                style={{\n                  marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                }}\n              >\n                <NavTransitionProvider\n                  entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                >\n                  {panel}\n                </NavTransitionProvider>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Touch>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}