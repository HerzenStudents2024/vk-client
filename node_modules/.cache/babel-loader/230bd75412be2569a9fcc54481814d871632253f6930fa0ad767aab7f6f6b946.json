{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nvar initialState = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null\n};\nfunction resolveInsets(e) {\n  var _e_detail = e.detail,\n    type = _e_detail.type,\n    data = _e_detail.data;\n  switch (type) {\n    case \"VKWebAppUpdateConfig\":\n    case \"VKWebAppUpdateInsets\":\n      var insets = data.insets;\n      if (insets) {\n        return _object_spread_props(_object_spread({}, insets), {\n          bottom: insets.bottom > 150 ? 0 : insets.bottom\n        });\n      }\n  }\n  return null;\n}\nvkBridge.subscribe(function (e) {\n  var insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\nexport function useInsets() {\n  var _React_useState = _sliced_to_array(React.useState(initialState), 2),\n    insets = _React_useState[0],\n    setInsets = _React_useState[1];\n  useIsomorphicLayoutEffect(function () {\n    var connectListener = function connectListener(e) {\n      var insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    };\n    vkBridge.subscribe(connectListener);\n    return function () {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n  return insets;\n}","map":{"version":3,"names":["React","vkBridge","useIsomorphicLayoutEffect","initialState","bottom","top","left","right","resolveInsets","e","_e_detail","detail","type","data","insets","_object_spread_props","_object_spread","subscribe","useInsets","_React_useState","_sliced_to_array","useState","setInsets","connectListener","unsubscribe"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/hooks/useInsets.ts"],"sourcesContent":["import * as React from 'react';\nimport vkBridge, { Insets as BridgeInsets } from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nexport interface Insets {\n  bottom: BridgeInsets['bottom'] | null;\n  top: BridgeInsets['top'] | null;\n  left: BridgeInsets['left'] | null;\n  right: BridgeInsets['right'] | null;\n}\n\nlet initialState: Insets = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null,\n};\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nfunction resolveInsets(e: BridgeEvent): Insets | null {\n  const { type, data } = e.detail;\n  switch (type) {\n    case 'VKWebAppUpdateConfig':\n    case 'VKWebAppUpdateInsets': // Устаревшее событие vk-bridge\n      const { insets } = data;\n      if (insets) {\n        return {\n          ...insets,\n          bottom: insets.bottom > 150 ? 0 : insets.bottom, // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        };\n      }\n  }\n  return null;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\n\nexport function useInsets(): Insets {\n  const [insets, setInsets] = React.useState<Insets>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function connectListener(e: BridgeEvent) {\n      const insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n\n    vkBridge.subscribe(connectListener);\n    return () => {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n\n  return insets;\n}\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,OAAOC,QAAA,MAA0C;AACjD,SAASC,yBAAyB,QAAQ;AAS1C,IAAIC,YAAA,GAAuB;EACzBC,MAAA,EAAQ;EACRC,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,EAAO;AACT;AAWA,SAASC,cAAcC,CAAc;EACnC,IAAuBC,SAAA,GAAAD,CAAA,CAAEE,MAAM;IAAvBC,IAAA,GAAeF,SAAA,CAAfE,IAAA;IAAMC,IAAA,GAASH,SAAA,CAATG,IAAA;EACd,QAAQD,IAAA;IACN,KAAK;IACL,KAAK;MACH,IAAME,MAAE,GAAWD,IAAA,CAAXC,MAAA;MACR,IAAIA,MAAA,EAAQ;QACV,OAAOC,oBAAA,CAAAC,cAAA,KACFF,MAAA;UACHV,MAAA,EAAQU,MAAA,CAAOV,MAAM,GAAG,MAAM,IAAIU,MAAA,CAAOV;;MAE7C;EACJ;EACA,OAAO;AACT;AAEAH,QAAA,CAASgB,SAAS,CAAC,UAACR,CAAA;EAClB,IAAMK,MAAA,GAASN,aAAA,CAAcC,CAAA;EAC7B,IAAIK,MAAA,EAAQ;IACVX,YAAA,GAAeW,MAAA;EACjB;AACF;AAEA,OAAO,SAASI,UAAA;EACd,IAA4BC,eAAA,GAAAC,gBAAA,CAAApB,KAAA,CAAMqB,QAAQ,CAASlB,YAAA;IAA5CW,MAAA,GAAqBK,eAAA;IAAbG,SAAA,GAAaH,eAAA;EAE5BjB,yBAAA,CAA0B;QACfqB,eAAA,GAAT,SAASA,gBAAgBd,CAAc;MACrC,IAAMK,MAAA,GAASN,aAAA,CAAcC,CAAA;MAC7B,IAAIK,MAAA,EAAQ;QACVQ,SAAA,CAAUR,MAAA;MACZ;IACF;IAEAb,QAAA,CAASgB,SAAS,CAACM,eAAA;IACnB,OAAO;MACLtB,QAAA,CAASuB,WAAW,CAACD,eAAA;IACvB;EACF,GAAG,EAAE;EAEL,OAAOT,MAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}