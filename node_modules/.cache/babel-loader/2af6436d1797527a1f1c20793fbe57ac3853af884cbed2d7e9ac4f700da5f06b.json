{"ast":null,"code":"// src/store/index.ts\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userSlice } from \"./slice\";\nconst rootReducer = combineReducers({\n  user: userSlice.reducer\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: true\n});\nexport { store };\nexport const useAppDispatch = useDispatch;\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["combineReducers","configureStore","useDispatch","useSelector","userSlice","rootReducer","user","reducer","store","devTools","useAppDispatch","useAppSelector"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/src/store/index.ts"],"sourcesContent":["// src/store/index.ts\r\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch, TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { userSlice } from \"./slice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userSlice.reducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: true,\r\n});\r\n\r\nexport { store };\r\n\r\nexport type RootDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\ntype DispatchFunc = () => RootDispatch;\r\nexport const useAppDispatch: DispatchFunc = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"mappings":"AAAA;AACA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,WAAW,EAAwBC,WAAW,QAAQ,aAAa;AAC5E,SAASC,SAAS,QAAQ,SAAS;AAEnC,MAAMC,WAAW,GAAGL,eAAe,CAAC;EAClCM,IAAI,EAAEF,SAAS,CAACG;AAClB,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGP,cAAc,CAAC;EAC3BM,OAAO,EAAEF,WAAW;EACpBI,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,SAASD,KAAK;AAMd,OAAO,MAAME,cAA4B,GAAGR,WAAW;AACvD,OAAO,MAAMS,cAA+C,GAAGR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}