{"ast":null,"code":"import { _ as _assert_this_initialized } from \"@swc/helpers/_/_assert_this_initialized\";\nimport { _ as _class_call_check } from \"@swc/helpers/_/_class_call_check\";\nimport { _ as _create_class } from \"@swc/helpers/_/_create_class\";\nimport { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _inherits } from \"@swc/helpers/_/_inherits\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport { _ as _create_super } from \"@swc/helpers/_/_create_super\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { clamp } from \"../../helpers/math\";\nimport { withContext } from \"../../hoc/withContext\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { Platform } from \"../../lib/platform\";\nimport { setTransformStyle } from \"../../lib/styles\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { rubber } from \"../../lib/touch\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { ConfigProviderContext, WebviewType } from \"../ConfigProvider/ConfigProviderContext\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { Touch } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { ModalRootContext } from \"./ModalRootContext\";\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from \"./constants\";\nimport { ModalType } from \"./types\";\nimport { withModalManager } from \"./useModalManager\";\nvar warn = warnOnce(\"ModalRoot\");\nfunction numberInRange(number, range) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\nfunction rangeTranslate(number) {\n  return clamp(number, 0, 98);\n}\nvar ModalRootTouchComponent = /*#__PURE__*/function (_React_Component) {\n  \"use strict\";\n\n  _inherits(ModalRootTouchComponent, _React_Component);\n  var _super = _create_super(ModalRootTouchComponent);\n  function ModalRootTouchComponent(props) {\n    _class_call_check(this, ModalRootTouchComponent);\n    var _this;\n    _this = _super.call(this, props);\n    _define_property(_assert_this_initialized(_this), \"documentScrolling\", false);\n    _define_property(_assert_this_initialized(_this), \"maskElementRef\", void 0);\n    _define_property(_assert_this_initialized(_this), \"viewportRef\", /*#__PURE__*/React.createRef());\n    _define_property(_assert_this_initialized(_this), \"maskAnimationFrame\", undefined);\n    _define_property(_assert_this_initialized(_this), \"modalRootContext\", void 0);\n    _define_property(_assert_this_initialized(_this), \"frameIds\", void 0);\n    _define_property(_assert_this_initialized(_this), \"restoreFocusTo\", undefined);\n    _define_property(_assert_this_initialized(_this), \"preventTouch\", function (event) {\n      if (!event) {\n        return false;\n      }\n      while (event.originalEvent) {\n        event = event.originalEvent;\n      }\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n      return false;\n    });\n    _define_property(_assert_this_initialized(_this), \"updateModalHeight\", function () {\n      var modalState = _this.props.getModalState(_this.props.activeModal);\n      if (modalState && modalState.type === ModalType.PAGE) {\n        if (_this.props.enteringModal) {\n          _this.waitTransitionFinish(modalState, function () {\n            requestAnimationFrame(function () {\n              return _this.checkPageContentHeight();\n            });\n          });\n        } else {\n          requestAnimationFrame(function () {\n            return _this.checkPageContentHeight();\n          });\n        }\n      }\n    });\n    _define_property(_assert_this_initialized(_this), \"onTouchMove\", function (e) {\n      if (_this.props.exitingModal) {\n        return;\n      }\n      var modalState = _this.props.getModalState(_this.props.activeModal);\n      if (!modalState) {\n        return;\n      }\n      if (modalState.type === ModalType.PAGE) {\n        return _this.onPageTouchMove(e, modalState);\n      }\n      if (modalState.type === ModalType.CARD) {\n        return _this.onCardTouchMove(e, modalState);\n      }\n    });\n    _define_property(_assert_this_initialized(_this), \"onTouchEnd\", function (e) {\n      var _modalState, _modalState1;\n      var modalState = _this.props.getModalState(_this.props.activeModal);\n      if (((_modalState = modalState) === null || _modalState === void 0 ? void 0 : _modalState.type) === ModalType.PAGE) {\n        return _this.onPageTouchEnd(e, modalState);\n      }\n      if (((_modalState1 = modalState) === null || _modalState1 === void 0 ? void 0 : _modalState1.type) === ModalType.CARD) {\n        return _this.onCardTouchEnd(e, modalState);\n      }\n    });\n    _define_property(_assert_this_initialized(_this), \"onScroll\", function (e) {\n      var _modalState, _modalState_contentElement, _modalState1;\n      var activeModal = _this.props.activeModal;\n      var target = e.target;\n      if (!activeModal) {\n        return;\n      }\n      var modalState = _this.props.getModalState(activeModal);\n      if (((_modalState = modalState) === null || _modalState === void 0 ? void 0 : _modalState.type) === ModalType.PAGE && ((_modalState1 = modalState) === null || _modalState1 === void 0 ? void 0 : (_modalState_contentElement = _modalState1.contentElement) === null || _modalState_contentElement === void 0 ? void 0 : _modalState_contentElement.contains(target))) {\n        modalState.contentScrolled = true;\n        if (modalState.contentScrollStopTimeout) {\n          clearTimeout(modalState.contentScrollStopTimeout);\n        }\n        modalState.contentScrollStopTimeout = setTimeout(function () {\n          if (modalState.contentScrolled) {\n            modalState.contentScrolled = false;\n          }\n        }, 250);\n      }\n    });\n    _this.state = {\n      touchDown: false,\n      dragging: false,\n      modalOpenedLog: []\n    };\n    _this.maskElementRef = /*#__PURE__*/React.createRef();\n    var _this_props_getModalState;\n    _this.modalRootContext = {\n      updateModalHeight: _this.updateModalHeight,\n      registerModal: function (_param) {\n        var id = _param.id,\n          data = _object_without_properties(_param, [\"id\"]);\n        return Object.assign((_this_props_getModalState = _this.props.getModalState(id)) !== null && _this_props_getModalState !== void 0 ? _this_props_getModalState : {}, data);\n      },\n      onClose: function () {\n        return _this.props.onExit();\n      },\n      isInsideModal: true\n    };\n    _this.frameIds = {};\n    return _this;\n  }\n  _create_class(ModalRootTouchComponent, [{\n    key: \"timeout\",\n    get: function get() {\n      return this.props.platform === Platform.IOS ? 400 : 320;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }, {\n    key: \"getModals\",\n    value: function getModals() {\n      return React.Children.toArray(this.props.children);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var\n      // Отслеживаем изменение размеров viewport\n      _this_window;\n      (_this_window = this.window) === null || _this_window === void 0 ? void 0 : _this_window.addEventListener(\"resize\", this.updateModalHeight, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.toggleDocumentScrolling(true);\n      this.window.removeEventListener(\"resize\", this.updateModalHeight, false);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this = this;\n      // transition phase 2: animate exiting modal\n      if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n        this.closeModal(this.props.exitingModal);\n      }\n      // transition phase 3: animate entering modal\n      if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n        var _enteringState;\n        var enteringModal = this.props.enteringModal;\n        var enteringState = this.props.getModalState(enteringModal);\n        this.props.onEnter();\n        this.waitTransitionFinish(enteringState, function () {\n          var _enteringState;\n          if ((_enteringState = enteringState) === null || _enteringState === void 0 ? void 0 : _enteringState.innerElement) {\n            enteringState.innerElement.style.transitionDelay = \"\";\n          }\n          _this.props.onEntered(enteringModal);\n        });\n        if ((_enteringState = enteringState) === null || _enteringState === void 0 ? void 0 : _enteringState.innerElement) {\n          enteringState.innerElement.style.transitionDelay = this.props.delayEnter ? \"\".concat(this.timeout, \"ms\") : \"\";\n          this.animateTranslate(enteringState, enteringState.translateY);\n        }\n      }\n      // focus restoration\n      if (this.props.activeModal && !prevProps.activeModal) {\n        this.restoreFocusTo = this.document.activeElement;\n      }\n      if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n        this.restoreFocusTo.focus();\n        this.restoreFocusTo = null;\n      }\n      this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);\n    }\n  }, {\n    /* Отключает скролл документа */key: \"toggleDocumentScrolling\",\n    value: function toggleDocumentScrolling(enabled) {\n      if (this.documentScrolling === enabled) {\n        return;\n      }\n      this.documentScrolling = enabled;\n      if (enabled) {\n        // Здесь нужен последний аргумент с такими же параметрами, потому что\n        // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n        // https://github.com/VKCOM/VKUI/issues/444\n        this.window.removeEventListener(\"touchmove\", this.preventTouch, {\n          // @ts-expect-error: TS2769 В интерфейсе EventListenerOptions нет поля passive\n          passive: false\n        });\n      } else {\n        this.window.addEventListener(\"touchmove\", this.preventTouch, {\n          passive: false\n        });\n      }\n    }\n  }, {\n    key: \"checkPageContentHeight\",\n    value: function checkPageContentHeight() {\n      var _modalState, _modalState1;\n      var modalState = this.props.getModalState(this.props.activeModal);\n      if (((_modalState = modalState) === null || _modalState === void 0 ? void 0 : _modalState.type) === ModalType.PAGE && ((_modalState1 = modalState) === null || _modalState1 === void 0 ? void 0 : _modalState1.modalElement)) {\n        var prevModalState = _object_spread({}, modalState);\n        initPageModal(modalState);\n        var currentModalState = _object_spread({}, modalState);\n        var needAnimate = false;\n        if (prevModalState.expandable === currentModalState.expandable) {\n          if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n            needAnimate = true;\n          }\n        } else {\n          needAnimate = true;\n        }\n        if (needAnimate) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n      }\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal(id) {\n      var _this = this;\n      var _nextModalState, _nextModalState1;\n      // Сбрасываем состояния, которые могут помешать закрытию модального окна\n      this.setState({\n        touchDown: false\n      });\n      var prevModalState = this.props.getModalState(id);\n      if (!prevModalState) {\n        id && warn(\"closeActiveModal: модальное окно (страница) \".concat(id, \" не существует\"), \"error\");\n        return;\n      }\n      if (!this.state.modalOpenedLog.length) {\n        this.setState(function (prevState) {\n          return {\n            modalOpenedLog: _to_consumable_array(prevState.modalOpenedLog).concat([id])\n          };\n        });\n      }\n      var nextModalState = this.props.getModalState(this.props.activeModal);\n      var nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n      var prevIsPage = !!prevModalState && prevModalState.type === ModalType.PAGE;\n      this.waitTransitionFinish(prevModalState, function () {\n        return _this.props.onExited(id);\n      });\n      var _prevModalState_translateY, _nextModalState_translateYFrom, _nextModalState_translateYFrom1;\n      var exitTranslate = prevIsPage && nextIsPage && ((_prevModalState_translateY = prevModalState.translateY) !== null && _prevModalState_translateY !== void 0 ? _prevModalState_translateY : 0) <= ((_nextModalState_translateYFrom = (_nextModalState = nextModalState) === null || _nextModalState === void 0 ? void 0 : _nextModalState.translateYFrom) !== null && _nextModalState_translateYFrom !== void 0 ? _nextModalState_translateYFrom : 0) && !this.props.isBack ? ((_nextModalState_translateYFrom1 = (_nextModalState1 = nextModalState) === null || _nextModalState1 === void 0 ? void 0 : _nextModalState1.translateYFrom) !== null && _nextModalState_translateYFrom1 !== void 0 ? _nextModalState_translateYFrom1 : 0) + 10 : 100;\n      this.animateTranslate(prevModalState, exitTranslate);\n      if (!nextModalState) {\n        // NOTE: was only for clean exit\n        this.setMaskOpacity(prevModalState, 0);\n        this.setState({\n          modalOpenedLog: []\n        });\n        prevModalState.translateY = undefined;\n      } else if (nextModalState.id && !this.state.modalOpenedLog.includes(nextModalState.id)) {\n        nextModalState.translateY = undefined;\n        this.setState(function (prevState) {\n          return {\n            modalOpenedLog: _to_consumable_array(prevState.modalOpenedLog).concat([nextModalState.id])\n          };\n        });\n      }\n    }\n  }, {\n    key: \"onPageTouchMove\",\n    value: function onPageTouchMove(event, modalState) {\n      var _modalState_innerElement, _modalState_headerElement;\n      var shiftY = event.shiftY,\n        originalEvent = event.originalEvent;\n      var target = originalEvent.target;\n      if (!event.isY) {\n        var _this_viewportRef_current;\n        if ((_this_viewportRef_current = this.viewportRef.current) === null || _this_viewportRef_current === void 0 ? void 0 : _this_viewportRef_current.contains(target)) {\n          originalEvent.preventDefault();\n        }\n        return;\n      }\n      if (!((_modalState_innerElement = modalState.innerElement) === null || _modalState_innerElement === void 0 ? void 0 : _modalState_innerElement.contains(target))) {\n        return originalEvent.preventDefault();\n      }\n      originalEvent.stopPropagation();\n      var expandable = modalState.expandable,\n        contentScrolled = modalState.contentScrolled,\n        collapsed = modalState.collapsed,\n        expanded = modalState.expanded;\n      if (!this.state.touchDown) {\n        var _modalState_contentElement;\n        var _modalState_contentElement_scrollTop;\n        modalState.touchStartContentScrollTop = (_modalState_contentElement_scrollTop = (_modalState_contentElement = modalState.contentElement) === null || _modalState_contentElement === void 0 ? void 0 : _modalState_contentElement.scrollTop) !== null && _modalState_contentElement_scrollTop !== void 0 ? _modalState_contentElement_scrollTop : 0;\n        this.setState({\n          touchDown: true\n        });\n      }\n      if (contentScrolled) {\n        return;\n      }\n      if (modalState.touchMovePositive === null) {\n        modalState.touchMovePositive = shiftY > 0;\n      }\n      if (!modalState.expandable || collapsed || expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0 || ((_modalState_headerElement = modalState.headerElement) === null || _modalState_headerElement === void 0 ? void 0 : _modalState_headerElement.contains(target))) {\n        originalEvent.preventDefault();\n        if (!expandable && shiftY < 0 || !this.window) {\n          return;\n        }\n        !this.state.dragging && this.setState({\n          dragging: true\n        });\n        var shiftYPercent = shiftY / this.window.innerHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform !== Platform.IOS);\n        modalState.touchShiftYPercent = shiftYPercent;\n        var _modalState_translateY;\n        modalState.translateYCurrent = rangeTranslate(((_modalState_translateY = modalState.translateY) !== null && _modalState_translateY !== void 0 ? _modalState_translateY : 0) + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onCardTouchMove\",\n    value: function onCardTouchMove(event, modalState) {\n      var _modalState_innerElement;\n      var originalEvent = event.originalEvent,\n        shiftY = event.shiftY;\n      var target = originalEvent.target;\n      if ((_modalState_innerElement = modalState.innerElement) === null || _modalState_innerElement === void 0 ? void 0 : _modalState_innerElement.contains(target)) {\n        if (!this.state.touchDown) {\n          this.setState({\n            touchDown: true,\n            dragging: true\n          });\n        }\n        var shiftYPercent = shiftY / modalState.innerElement.offsetHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform !== Platform.IOS);\n        modalState.touchShiftYPercent = shiftYPercent;\n        var _modalState_translateY;\n        modalState.translateYCurrent = Math.max(0, ((_modalState_translateY = modalState.translateY) !== null && _modalState_translateY !== void 0 ? _modalState_translateY : 0) + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onPageTouchEnd\",\n    value: function onPageTouchEnd(event, modalState) {\n      var _this = this;\n      var startY = event.startY,\n        shiftY = event.shiftY;\n      modalState.contentScrolled = false;\n      modalState.touchMovePositive = null;\n      var setStateCallback;\n      if (this.state.dragging && this.window) {\n        var shiftYEndPercent = (startY + shiftY) / this.window.innerHeight * 100;\n        var _modalState_translateYCurrent;\n        var translateY = (_modalState_translateYCurrent = modalState.translateYCurrent) !== null && _modalState_translateYCurrent !== void 0 ? _modalState_translateYCurrent : 0;\n        var _modalState_touchShiftYPercent;\n        var expectTranslateY = translateY / event.duration * 240 * 0.6 * (((_modalState_touchShiftYPercent = modalState.touchShiftYPercent) !== null && _modalState_touchShiftYPercent !== void 0 ? _modalState_touchShiftYPercent : 0) < 0 ? -1 : 1);\n        translateY = rangeTranslate(translateY + expectTranslateY);\n        if (modalState.settlingHeight !== 100) {\n          if (numberInRange(translateY, modalState.expandedRange)) {\n            var _modalState_expandedRange;\n            var _modalState_expandedRange_;\n            translateY = (_modalState_expandedRange_ = (_modalState_expandedRange = modalState.expandedRange) === null || _modalState_expandedRange === void 0 ? void 0 : _modalState_expandedRange[0]) !== null && _modalState_expandedRange_ !== void 0 ? _modalState_expandedRange_ : 0;\n          } else if (numberInRange(translateY, modalState.collapsedRange)) {\n            var _modalState_translateYFrom;\n            translateY = (_modalState_translateYFrom = modalState.translateYFrom) !== null && _modalState_translateYFrom !== void 0 ? _modalState_translateYFrom : 0;\n          } else if (numberInRange(translateY, modalState.hiddenRange)) {\n            translateY = 100;\n          } else {\n            var _modalState_translateYFrom1;\n            translateY = (_modalState_translateYFrom1 = modalState.translateYFrom) !== null && _modalState_translateYFrom1 !== void 0 ? _modalState_translateYFrom1 : 0;\n          }\n        } else {\n          if (numberInRange(translateY, [0, 25])) {\n            translateY = 0;\n          } else {\n            translateY = 100;\n          }\n        }\n        if (translateY !== 100 && shiftYEndPercent >= 75) {\n          translateY = 100;\n        }\n        modalState.translateY = translateY;\n        modalState.translateYCurrent = translateY;\n        modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n        modalState.expanded = translateY === 0;\n        modalState.hidden = translateY === 100;\n        if (modalState.hidden) {\n          this.props.onExit();\n        }\n        setStateCallback = function () {\n          if (!modalState.hidden) {\n            _this.animateTranslate(modalState, modalState.translateY);\n          }\n          _this.setMaskOpacity(modalState);\n        };\n      }\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, setStateCallback);\n    }\n  }, {\n    key: \"onCardTouchEnd\",\n    value: function onCardTouchEnd(param, modalState) {\n      var duration = param.duration;\n      var _this = this;\n      var setStateCallback;\n      if (this.state.dragging) {\n        var _modalState_translateYCurrent;\n        var translateY = (_modalState_translateYCurrent = modalState.translateYCurrent) !== null && _modalState_translateYCurrent !== void 0 ? _modalState_translateYCurrent : 0;\n        var _modalState_touchShiftYPercent;\n        var expectTranslateY = translateY / duration * 240 * 0.6 * (((_modalState_touchShiftYPercent = modalState.touchShiftYPercent) !== null && _modalState_touchShiftYPercent !== void 0 ? _modalState_touchShiftYPercent : 0) < 0 ? -1 : 1);\n        translateY = Math.max(0, translateY + expectTranslateY);\n        if (translateY >= 30) {\n          translateY = 100;\n        } else {\n          translateY = 0;\n        }\n        modalState.translateY = translateY;\n        modalState.hidden = translateY === 100;\n        if (modalState.hidden) {\n          this.props.onExit();\n        }\n        setStateCallback = function () {\n          if (!modalState.hidden) {\n            _this.animateTranslate(modalState, modalState.translateY);\n          }\n          _this.setMaskOpacity(modalState);\n        };\n      }\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, setStateCallback);\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(modalState, eventHandler) {\n      if (transitionEvent.supported) {\n        var _modalState_innerElement, _modalState;\n        var onceHandler = function () {\n          var _modalState_innerElement, _modalState;\n          (_modalState = modalState) === null || _modalState === void 0 ? void 0 : (_modalState_innerElement = _modalState.innerElement) === null || _modalState_innerElement === void 0 ? void 0 : _modalState_innerElement.removeEventListener(transitionEvent.name, onceHandler);\n          eventHandler();\n        };\n        (_modalState = modalState) === null || _modalState === void 0 ? void 0 : (_modalState_innerElement = _modalState.innerElement) === null || _modalState_innerElement === void 0 ? void 0 : _modalState_innerElement.addEventListener(transitionEvent.name, onceHandler);\n      } else {\n        setTimeout(eventHandler, this.timeout);\n      }\n    }\n  }, {\n    /**\n    * Анимирует сдвиг модалки\n    *\n    * @param {ModalsStateEntry} modalState\n    * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n    */\n    key: \"animateTranslate\",\n    value: function animateTranslate(modalState, percent) {\n      var frameId = \"animateTranslateFrame\".concat(modalState.id);\n      cancelAnimationFrame(this.frameIds[frameId]);\n      this.frameIds[frameId] = requestAnimationFrame(function () {\n        setTransformStyle(modalState.innerElement, \"translate3d(0, \".concat(percent, \"%, 0)\"));\n      });\n    }\n  }, {\n    /* Устанавливает прозрачность для полупрозрачной подложки */key: \"setMaskOpacity\",\n    value: function setMaskOpacity(modalState) {\n      var forceOpacity = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n      var _this = this;\n      var _this_props_history;\n      if (forceOpacity === null && ((_this_props_history = this.props.history) === null || _this_props_history === void 0 ? void 0 : _this_props_history[0]) !== modalState.id) {\n        return;\n      }\n      if (this.maskAnimationFrame) {\n        cancelAnimationFrame(this.maskAnimationFrame);\n      }\n      this.maskAnimationFrame = requestAnimationFrame(function () {\n        if (_this.maskElementRef.current) {\n          var _modalState_translateY = modalState.translateY,\n            translateY = _modalState_translateY === void 0 ? 0 : _modalState_translateY,\n            _modalState_translateYCurrent = modalState.translateYCurrent,\n            translateYCurrent = _modalState_translateYCurrent === void 0 ? 0 : _modalState_translateYCurrent;\n          var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n          _this.maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var _this_props_configProvider;\n      var _this_props = this.props,\n        activeModal = _this_props.activeModal,\n        exitingModal = _this_props.exitingModal,\n        enteringModal = _this_props.enteringModal;\n      var _this_state = this.state,\n        touchDown = _this_state.touchDown,\n        dragging = _this_state.dragging;\n      if (!activeModal && !exitingModal) {\n        return null;\n      }\n      return /*#__PURE__*/React.createElement(TouchRootContext.Provider, {\n        value: true\n      }, /*#__PURE__*/React.createElement(ModalRootContext.Provider, {\n        value: this.modalRootContext\n      }, /*#__PURE__*/React.createElement(Touch, {\n        className: classNames(\"vkuiModalRoot\", ((_this_props_configProvider = this.props.configProvider) === null || _this_props_configProvider === void 0 ? void 0 : _this_props_configProvider.webviewType) === WebviewType.VKAPPS && \"vkuiModalRoot--vkapps\", touchDown && classNames(\"vkuiModalRoot--touched\", \"vkuiInternalModalRoot--touched\"), !!(enteringModal || exitingModal) && classNames(\"vkuiModalRoot--switching\", \"vkuiInternalModalRoot--switching\")),\n        onMove: this.onTouchMove,\n        onEnd: this.onTouchEnd,\n        onScroll: this.onScroll\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vkuiModalRoot__mask\",\n        onClick: this.props.onExit,\n        ref: this.maskElementRef\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vkuiModalRoot__viewport\",\n        ref: this.viewportRef\n      }, this.getModals().map(function (Modal) {\n        var modalId = getNavId(Modal.props, warn);\n        var _modalState = _this.props.getModalState(modalId);\n        if (modalId !== activeModal && modalId !== exitingModal || !_modalState) {\n          return null;\n        }\n        var modalState = _object_spread({}, _modalState);\n        var isPage = modalState.type === ModalType.PAGE;\n        var key = \"modal-\".concat(modalId);\n        return /*#__PURE__*/React.createElement(FocusTrap, {\n          key: key,\n          getRootRef: function (e) {\n            var modalState = _this.props.getModalState(modalId);\n            if (modalState) {\n              modalState.modalElement = e;\n            }\n          },\n          onClose: _this.props.onExit,\n          timeout: _this.timeout,\n          className: classNames(\"vkuiModalRoot__modal\", dragging && \"vkuiInternalModalRoot__modal--dragging\", isPage && modalState.expandable && \"vkuiInternalModalRoot__modal--expandable\", isPage && modalState.collapsed && \"vkuiInternalModalRoot__modal--collapsed\"),\n          restoreFocus: false\n        }, Modal);\n      })))));\n    }\n  }]);\n  return ModalRootTouchComponent;\n}(React.Component);\nexport var ModalRootTouch = withContext(withPlatform(withDOM(withModalManager(initModal)(ModalRootTouchComponent))), ConfigProviderContext, \"configProvider\");\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState) {\n  switch (modalState.type) {\n    case ModalType.PAGE:\n      modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case ModalType.CARD:\n      return initCardModal(modalState);\n    default:\n      process.env.NODE_ENV === \"development\" && warn('initActiveModal: modalState.type=\"'.concat(modalState.type, '\" не поддерживается'), \"error\");\n  }\n}\nfunction initPageModal(modalState) {\n  var _contentElement, _contentElement1;\n  var contentElement = modalState.contentElement;\n  var contentHeight = ((_contentElement = contentElement) === null || _contentElement === void 0 ? void 0 : _contentElement.firstElementChild).offsetHeight;\n  var prevTranslateY = modalState.translateY;\n  var _contentElement_clientHeight;\n  modalState.expandable = contentHeight > ((_contentElement_clientHeight = (_contentElement1 = contentElement) === null || _contentElement1 === void 0 ? void 0 : _contentElement1.clientHeight) !== null && _contentElement_clientHeight !== void 0 ? _contentElement_clientHeight : 0) || modalState.settlingHeight === 100 || modalState.expanded;\n  var collapsed = false;\n  var expanded = false;\n  var translateYFrom;\n  var translateY;\n  var expandedRange;\n  var collapsedRange;\n  var hiddenRange;\n  if (modalState.expandable) {\n    var _modalState_settlingHeight;\n    translateYFrom = 100 - ((_modalState_settlingHeight = modalState.settlingHeight) !== null && _modalState_settlingHeight !== void 0 ? _modalState_settlingHeight : 0);\n    var shiftHalf = translateYFrom / 2;\n    var visiblePart = 100 - translateYFrom;\n    expandedRange = [0, shiftHalf];\n    collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n    collapsed = translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    var _modalState_headerElement, _modalState_innerElement_parentElement, _modalState_innerElement;\n    var _modalState_headerElement_offsetHeight;\n    var headerHeight = (_modalState_headerElement_offsetHeight = (_modalState_headerElement = modalState.headerElement) === null || _modalState_headerElement === void 0 ? void 0 : _modalState_headerElement.offsetHeight) !== null && _modalState_headerElement_offsetHeight !== void 0 ? _modalState_headerElement_offsetHeight : 0;\n    var height = contentHeight + headerHeight;\n    var _modalState_innerElement_parentElement_offsetHeight;\n    translateYFrom = 100 - height / ((_modalState_innerElement_parentElement_offsetHeight = (_modalState_innerElement = modalState.innerElement) === null || _modalState_innerElement === void 0 ? void 0 : (_modalState_innerElement_parentElement = _modalState_innerElement.parentElement) === null || _modalState_innerElement_parentElement === void 0 ? void 0 : _modalState_innerElement_parentElement.offsetHeight) !== null && _modalState_innerElement_parentElement_offsetHeight !== void 0 ? _modalState_innerElement_parentElement_offsetHeight : 0) * 100;\n    translateY = translateYFrom;\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = [translateY + 25, translateY + 25];\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if (modalState.expandable && translateY > (prevTranslateY !== null && prevTranslateY !== void 0 ? prevTranslateY : 100) || modalState.settlingHeight === 100) {\n    translateY = 0;\n  }\n  // Если модалка уже раскрыта обновляем состояния\n  if (translateY === 0) {\n    expanded = true;\n    collapsed = false;\n  }\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\nfunction initCardModal(modalState) {\n  modalState.translateY = 0;\n}","map":{"version":3,"names":["React","classNames","clamp","withContext","withPlatform","withDOM","getNavId","Platform","setTransformStyle","transitionEvent","rubber","warnOnce","ConfigProviderContext","WebviewType","FocusTrap","Touch","TouchRootContext","ModalRootContext","MODAL_PAGE_DEFAULT_PERCENT_HEIGHT","ModalType","withModalManager","warn","numberInRange","number","range","rangeTranslate","ModalRootTouchComponent","_React_Component","props","_define_property","_assert_this_initialized","_this","createRef","undefined","event","originalEvent","preventDefault","modalState","getModalState","activeModal","type","PAGE","enteringModal","waitTransitionFinish","requestAnimationFrame","checkPageContentHeight","e","exitingModal","onPageTouchMove","CARD","onCardTouchMove","_modalState","_modalState1","onPageTouchEnd","onCardTouchEnd","_modalState_contentElement","target","contentElement","contains","contentScrolled","contentScrollStopTimeout","clearTimeout","setTimeout","state","touchDown","dragging","modalOpenedLog","maskElementRef","_this_props_getModalState","modalRootContext","updateModalHeight","registerModal","_param","id","data","_object_without_properties","Object","assign","onClose","onExit","isInsideModal","frameIds","key","get","platform","IOS","document","window","getModals","Children","toArray","children","componentDidMount","_this_window","addEventListener","componentWillUnmount","toggleDocumentScrolling","removeEventListener","componentDidUpdate","prevProps","closeModal","_enteringState","enteringState","onEnter","innerElement","style","transitionDelay","onEntered","delayEnter","concat","timeout","animateTranslate","translateY","restoreFocusTo","activeElement","focus","enabled","documentScrolling","preventTouch","passive","modalElement","prevModalState","_object_spread","initPageModal","currentModalState","needAnimate","expandable","translateYFrom","_nextModalState","_nextModalState1","setState","length","prevState","_to_consumable_array","nextModalState","nextIsPage","prevIsPage","onExited","_prevModalState_translateY","_nextModalState_translateYFrom","_nextModalState_translateYFrom1","exitTranslate","isBack","setMaskOpacity","includes","_modalState_innerElement","_modalState_headerElement","shiftY","isY","_this_viewportRef_current","viewportRef","current","stopPropagation","collapsed","expanded","_modalState_contentElement_scrollTop","touchStartContentScrollTop","scrollTop","touchMovePositive","headerElement","shiftYPercent","innerHeight","shiftYCurrent","touchShiftYPercent","_modalState_translateY","translateYCurrent","offsetHeight","Math","max","startY","setStateCallback","shiftYEndPercent","_modalState_translateYCurrent","_modalState_touchShiftYPercent","expectTranslateY","duration","settlingHeight","expandedRange","_modalState_expandedRange","_modalState_expandedRange_","collapsedRange","_modalState_translateYFrom","hiddenRange","_modalState_translateYFrom1","hidden","param","eventHandler","supported","onceHandler","name","percent","frameId","cancelAnimationFrame","forceOpacity","arguments","_this_props_history","history","maskAnimationFrame","opacity","toString","render","_this_props_configProvider","_this_props","_this_state","createElement","Provider","value","className","configProvider","webviewType","VKAPPS","onMove","onTouchMove","onEnd","onTouchEnd","onScroll","onClick","ref","map","Modal","modalId","isPage","getRootRef","restoreFocus","Component","ModalRootTouch","initModal","initCardModal","process","env","NODE_ENV","_contentElement","_contentElement1","contentHeight","firstElementChild","prevTranslateY","_contentElement_clientHeight","clientHeight","_modalState_settlingHeight","shiftHalf","visiblePart","_modalState_innerElement_parentElement","_modalState_headerElement_offsetHeight","headerHeight","height","_modalState_innerElement_parentElement_offsetHeight","parentElement"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/components/ModalRoot/ModalRoot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { withContext } from '../../hoc/withContext';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { setTransformStyle } from '../../lib/styles';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { rubber } from '../../lib/touch';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ConfigProviderContext, WebviewType } from '../ConfigProvider/ConfigProviderContext';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { ModalRootContext, ModalRootContextInterface } from './ModalRootContext';\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from './constants';\nimport { ModalRootWithDOMProps, ModalsStateEntry, ModalType, TranslateRange } from './types';\nimport { ModalTransitionProps, withModalManager } from './useModalManager';\nimport styles from './ModalRoot.module.css';\n\nconst warn = warnOnce('ModalRoot');\n\nfunction numberInRange(number: number, range: TranslateRange | undefined) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number: number) {\n  return clamp(number, 0, 98);\n}\n\ninterface ModalRootState {\n  touchDown?: boolean;\n  dragging?: boolean;\n  modalOpenedLog: string[];\n}\n\nclass ModalRootTouchComponent extends React.Component<\n  ModalRootWithDOMProps & DOMProps & ModalTransitionProps,\n  ModalRootState\n> {\n  constructor(props: ModalRootWithDOMProps & ModalTransitionProps) {\n    super(props);\n    this.state = {\n      touchDown: false,\n      dragging: false,\n      modalOpenedLog: [],\n    };\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: this.updateModalHeight,\n      registerModal: ({ id, ...data }) => Object.assign(this.props.getModalState(id) ?? {}, data),\n      onClose: () => this.props.onExit(),\n      isInsideModal: true,\n    };\n\n    this.frameIds = {};\n  }\n\n  private documentScrolling = false;\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private readonly viewportRef = React.createRef<HTMLDivElement>();\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private readonly frameIds: {\n    [index: string]: number;\n  };\n  private restoreFocusTo: HTMLElement | undefined | null = undefined;\n\n  get timeout(): number {\n    return this.props.platform === Platform.IOS ? 400 : 320;\n  }\n\n  get document(): Document {\n    return this.props.document as Document;\n  }\n\n  get window(): Window {\n    return this.props.window as Window;\n  }\n\n  getModals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  componentDidMount() {\n    // Отслеживаем изменение размеров viewport\n    this.window?.addEventListener('resize', this.updateModalHeight, false);\n  }\n\n  componentWillUnmount() {\n    this.toggleDocumentScrolling(true);\n    this.window.removeEventListener('resize', this.updateModalHeight, false);\n  }\n\n  componentDidUpdate(prevProps: ModalRootWithDOMProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (this.props.exitingModal && this.props.exitingModal !== prevProps.exitingModal) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (this.props.enteringModal && this.props.enteringModal !== prevProps.enteringModal) {\n      const { enteringModal } = this.props;\n      const enteringState = this.props.getModalState(enteringModal);\n      this.props.onEnter();\n      this.waitTransitionFinish(enteringState, () => {\n        if (enteringState?.innerElement) {\n          enteringState.innerElement.style.transitionDelay = '';\n        }\n        this.props.onEntered(enteringModal);\n      });\n\n      if (enteringState?.innerElement) {\n        enteringState.innerElement.style.transitionDelay = this.props.delayEnter\n          ? `${this.timeout}ms`\n          : '';\n        this.animateTranslate(enteringState, enteringState.translateY);\n      }\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = this.document.activeElement as HTMLElement;\n    }\n    if (!this.props.activeModal && !this.props.exitingModal && this.restoreFocusTo) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = null;\n    }\n\n    this.toggleDocumentScrolling(!this.props.activeModal && !this.props.exitingModal);\n  }\n\n  /* Отключает скролл документа */\n  toggleDocumentScrolling(enabled: boolean) {\n    if (this.documentScrolling === enabled) {\n      return;\n    }\n    this.documentScrolling = enabled;\n\n    if (enabled) {\n      // Здесь нужен последний аргумент с такими же параметрами, потому что\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      this.window.removeEventListener('touchmove', this.preventTouch, {\n        // @ts-expect-error: TS2769 В интерфейсе EventListenerOptions нет поля passive\n        passive: false,\n      });\n    } else {\n      this.window.addEventListener('touchmove', this.preventTouch, {\n        passive: false,\n      });\n    }\n  }\n\n  preventTouch = (event: any) => {\n    if (!event) {\n      return false;\n    }\n    while (event.originalEvent) {\n      event = event.originalEvent;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    return false;\n  };\n\n  checkPageContentHeight() {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState?.type === ModalType.PAGE && modalState?.modalElement) {\n      const prevModalState = { ...modalState };\n      initPageModal(modalState);\n      const currentModalState = { ...modalState };\n\n      let needAnimate = false;\n\n      if (prevModalState.expandable === currentModalState.expandable) {\n        if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n          needAnimate = true;\n        }\n      } else {\n        needAnimate = true;\n      }\n\n      if (needAnimate) {\n        this.animateTranslate(modalState, modalState.translateY);\n      }\n    }\n  }\n\n  updateModalHeight = () => {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState && modalState.type === ModalType.PAGE) {\n      if (this.props.enteringModal) {\n        this.waitTransitionFinish(modalState, () => {\n          requestAnimationFrame(() => this.checkPageContentHeight());\n        });\n      } else {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n  };\n\n  closeModal(id: string) {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false });\n\n    const prevModalState = this.props.getModalState(id);\n\n    if (!prevModalState) {\n      id && warn(`closeActiveModal: модальное окно (страница) ${id} не существует`, 'error');\n      return;\n    }\n    if (!this.state.modalOpenedLog.length) {\n      this.setState((prevState) => ({\n        modalOpenedLog: [...prevState.modalOpenedLog, id],\n      }));\n    }\n    const nextModalState = this.props.getModalState(this.props.activeModal);\n    const nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n\n    const prevIsPage = !!prevModalState && prevModalState.type === ModalType.PAGE;\n    this.waitTransitionFinish(prevModalState, () => this.props.onExited(id));\n    const exitTranslate =\n      prevIsPage &&\n      nextIsPage &&\n      (prevModalState.translateY ?? 0) <= (nextModalState?.translateYFrom ?? 0) &&\n      !this.props.isBack\n        ? (nextModalState?.translateYFrom ?? 0) + 10\n        : 100;\n    this.animateTranslate(prevModalState, exitTranslate);\n\n    if (!nextModalState) {\n      // NOTE: was only for clean exit\n      this.setMaskOpacity(prevModalState, 0);\n      this.setState({ modalOpenedLog: [] });\n      prevModalState.translateY = undefined;\n    } else if (nextModalState.id && !this.state.modalOpenedLog.includes(nextModalState.id)) {\n      nextModalState.translateY = undefined;\n      this.setState((prevState) => ({\n        modalOpenedLog: [...prevState.modalOpenedLog, nextModalState.id!],\n      }));\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    if (this.props.exitingModal) {\n      return;\n    }\n    const modalState = this.props.getModalState(this.props.activeModal);\n    if (!modalState) {\n      return;\n    }\n\n    if (modalState.type === ModalType.PAGE) {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === ModalType.CARD) {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { shiftY, originalEvent } = event;\n    const target = originalEvent.target as HTMLElement;\n\n    if (!event.isY) {\n      if (this.viewportRef.current?.contains(target)) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!modalState.innerElement?.contains(target)) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartContentScrollTop = modalState.contentElement?.scrollTop ?? 0;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) {\n      return;\n    }\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      (expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0) ||\n      modalState.headerElement?.contains(target)\n    ) {\n      originalEvent.preventDefault();\n\n      if ((!expandable && shiftY < 0) || !this.window) {\n        return;\n      }\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = (shiftY / this.window.innerHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform !== Platform.IOS);\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate((modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY } = event;\n    const target = originalEvent.target as HTMLElement;\n    if (modalState.innerElement?.contains(target)) {\n      if (!this.state.touchDown) {\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent = (shiftY / modalState.innerElement.offsetHeight) * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform !== Platform.IOS);\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(0, (modalState.translateY ?? 0) + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e: TouchEvent) => {\n    const modalState = this.props.getModalState(this.props.activeModal);\n\n    if (modalState?.type === ModalType.PAGE) {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState?.type === ModalType.CARD) {\n      return this.onCardTouchEnd(e, modalState);\n    }\n  };\n\n  onPageTouchEnd(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let setStateCallback;\n\n    if (this.state.dragging && this.window) {\n      const shiftYEndPercent = ((startY + shiftY) / this.window.innerHeight) * 100;\n\n      let translateY = modalState.translateYCurrent ?? 0;\n      const expectTranslateY =\n        (translateY / event.duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (modalState.settlingHeight !== 100) {\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange?.[0] ?? 0;\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom ?? 0;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = 100;\n        } else {\n          translateY = modalState.translateYFrom ?? 0;\n        }\n      } else {\n        if (numberInRange(translateY, [0, 25])) {\n          translateY = 0;\n        } else {\n          translateY = 100;\n        }\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onCardTouchEnd({ duration }: TouchEvent, modalState: ModalsStateEntry) {\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent ?? 0;\n\n      const expectTranslateY =\n        (translateY / duration) * 240 * 0.6 * ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback,\n    );\n  }\n\n  onScroll = (e: React.SyntheticEvent) => {\n    const activeModal = this.props.activeModal;\n\n    const target = e.target as HTMLElement;\n\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.props.getModalState(activeModal);\n    if (modalState?.type === ModalType.PAGE && modalState?.contentElement?.contains(target)) {\n      modalState.contentScrolled = true;\n\n      if (modalState.contentScrollStopTimeout) {\n        clearTimeout(modalState.contentScrollStopTimeout);\n      }\n\n      modalState.contentScrollStopTimeout = setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish(modalState: ModalsStateEntry | undefined, eventHandler: () => void) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState?.innerElement?.removeEventListener(transitionEvent.name as string, onceHandler);\n        eventHandler();\n      };\n\n      modalState?.innerElement?.addEventListener(transitionEvent.name as string, onceHandler);\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /**\n   * Анимирует сдвиг модалки\n   *\n   * @param {ModalsStateEntry} modalState\n   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n   */\n  animateTranslate(modalState: ModalsStateEntry, percent: number | undefined) {\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this.frameIds[frameId]);\n\n    this.frameIds[frameId] = requestAnimationFrame(() => {\n      setTransformStyle(modalState.innerElement, `translate3d(0, ${percent}%, 0)`);\n    });\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(modalState: ModalsStateEntry, forceOpacity: number | null = null) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = clamp(opacity, 0, 100).toString();\n      }\n    });\n  }\n\n  render() {\n    const { activeModal, exitingModal, enteringModal } = this.props;\n    const { touchDown, dragging } = this.state;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <ModalRootContext.Provider value={this.modalRootContext}>\n          <Touch\n            className={classNames(\n              styles['ModalRoot'],\n              this.props.configProvider?.webviewType === WebviewType.VKAPPS &&\n                styles['ModalRoot--vkapps'],\n              touchDown &&\n                classNames(styles['ModalRoot--touched'], 'vkuiInternalModalRoot--touched'),\n              !!(enteringModal || exitingModal) &&\n                classNames(styles['ModalRoot--switching'], 'vkuiInternalModalRoot--switching'),\n            )}\n            onMove={this.onTouchMove}\n            onEnd={this.onTouchEnd}\n            onScroll={this.onScroll}\n          >\n            <div\n              className={styles['ModalRoot__mask']}\n              onClick={this.props.onExit}\n              ref={this.maskElementRef}\n            />\n            <div className={styles['ModalRoot__viewport']} ref={this.viewportRef}>\n              {this.getModals().map((Modal) => {\n                const modalId = getNavId(Modal.props, warn);\n                const _modalState = this.props.getModalState(modalId);\n                if ((modalId !== activeModal && modalId !== exitingModal) || !_modalState) {\n                  return null;\n                }\n                const modalState = { ..._modalState };\n\n                const isPage = modalState.type === ModalType.PAGE;\n                const key = `modal-${modalId}`;\n\n                return (\n                  <FocusTrap\n                    key={key}\n                    getRootRef={(e) => {\n                      const modalState = this.props.getModalState(modalId);\n                      if (modalState) {\n                        modalState.modalElement = e;\n                      }\n                    }}\n                    onClose={this.props.onExit}\n                    timeout={this.timeout}\n                    className={classNames(\n                      styles['ModalRoot__modal'],\n\n                      dragging && 'vkuiInternalModalRoot__modal--dragging',\n\n                      isPage && modalState.expandable && 'vkuiInternalModalRoot__modal--expandable',\n                      isPage && modalState.collapsed && 'vkuiInternalModalRoot__modal--collapsed',\n                    )}\n                    restoreFocus={false}\n                  >\n                    {Modal}\n                  </FocusTrap>\n                );\n              })}\n            </div>\n          </Touch>\n        </ModalRootContext.Provider>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootTouch = withContext(\n  withPlatform(\n    withDOM<ModalRootWithDOMProps>(withModalManager(initModal)(ModalRootTouchComponent)),\n  ),\n  ConfigProviderContext,\n  'configProvider',\n);\n\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState: ModalsStateEntry) {\n  switch (modalState.type) {\n    case ModalType.PAGE:\n      modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case ModalType.CARD:\n      return initCardModal(modalState);\n    default:\n      process.env.NODE_ENV === 'development' &&\n        warn(`initActiveModal: modalState.type=\"${modalState.type}\" не поддерживается`, 'error');\n  }\n}\n\nfunction initPageModal(modalState: ModalsStateEntry) {\n  const { contentElement } = modalState;\n  const contentHeight = (contentElement?.firstElementChild as HTMLElement).offsetHeight;\n\n  let prevTranslateY = modalState.translateY;\n\n  modalState.expandable =\n    contentHeight > (contentElement?.clientHeight ?? 0) ||\n    modalState.settlingHeight === 100 ||\n    modalState.expanded;\n\n  let collapsed = false;\n  let expanded = false;\n  let translateYFrom;\n  let translateY;\n  let expandedRange: TranslateRange;\n  let collapsedRange: TranslateRange;\n  let hiddenRange: TranslateRange;\n\n  if (modalState.expandable) {\n    translateYFrom = 100 - (modalState.settlingHeight ?? 0);\n\n    const shiftHalf = translateYFrom / 2;\n    const visiblePart = 100 - translateYFrom;\n\n    expandedRange = [0, shiftHalf];\n    collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n    collapsed = translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    const headerHeight = modalState.headerElement?.offsetHeight ?? 0;\n    const height = contentHeight + headerHeight;\n\n    translateYFrom =\n      100 - (height / (modalState.innerElement?.parentElement?.offsetHeight ?? 0)) * 100;\n    translateY = translateYFrom;\n\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = [translateY + 25, translateY + 25];\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if (\n    (modalState.expandable && translateY > (prevTranslateY ?? 100)) ||\n    modalState.settlingHeight === 100\n  ) {\n    translateY = 0;\n  }\n\n  // Если модалка уже раскрыта обновляем состояния\n  if (translateY === 0) {\n    expanded = true;\n    collapsed = false;\n  }\n\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\n\nfunction initCardModal(modalState: ModalsStateEntry) {\n  modalState.translateY = 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}