{"ast":null,"code":"import { _ as _assert_this_initialized } from \"@swc/helpers/_/_assert_this_initialized\";\nimport { _ as _class_call_check } from \"@swc/helpers/_/_class_call_check\";\nimport { _ as _create_class } from \"@swc/helpers/_/_create_class\";\nimport { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _inherits } from \"@swc/helpers/_/_inherits\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport { _ as _create_super } from \"@swc/helpers/_/_create_super\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\nimport { withContext } from \"../../hoc/withContext\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { canUseDOM, withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { Platform } from \"../../lib/platform\";\nimport { animationEvent, transitionEvent } from \"../../lib/supportEvents\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { ScrollContext } from \"../AppRoot/ScrollContext\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport { NavTransitionProvider } from \"../NavTransitionContext/NavTransitionContext\";\nimport { SplitColContext } from \"../SplitCol/SplitColContext\";\nimport { Touch } from \"../Touch/Touch\";\nimport { swipeBackExcluded } from \"./utils\";\nvar warn = warnOnce(\"ViewInfinite\");\nvar SwipeBackResults;\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\nvar scrollsCache = {};\nvar _React_Component;\nvar ViewInfiniteComponent = /*#__PURE__*/function (_superClass) {\n  \"use strict\";\n\n  _inherits(ViewInfiniteComponent, _superClass);\n  var _super = _create_super(ViewInfiniteComponent);\n  function ViewInfiniteComponent(props) {\n    _class_call_check(this, ViewInfiniteComponent);\n    var _this;\n    _this = _super.call(this, props);\n    _define_property(_assert_this_initialized(_this), \"scrolls\", scrollsCache[getNavId(_this.props, warn)] || {});\n    _define_property(_assert_this_initialized(_this), \"transitionFinishTimeout\", undefined);\n    _define_property(_assert_this_initialized(_this), \"animationFinishTimeout\", undefined);\n    _define_property(_assert_this_initialized(_this), \"panelNodes\", {});\n    _define_property(_assert_this_initialized(_this), \"transitionEndHandler\", function (e) {\n      if ((!e || [\"vkuivkui-animation-ios-next-forward\", \"vkuivkui-animation-ios-prev-back\", \"vkuivkui-animation-view-next-forward\", \"vkuivkui-animation-view-prev-back\"].includes(e.animationName)) && _this.state.prevPanel !== null) {\n        _this.flushTransition(_this.state.prevPanel, Boolean(_this.state.isBack));\n      }\n    });\n    _define_property(_assert_this_initialized(_this), \"swipingBackTransitionEndHandler\", function (e) {\n      // indexOf because of vendor prefixes in old browsers\n      if (!e || e.propertyName.includes(\"transform\") && e.target === _this.pickPanel(_this.state.swipeBackNextPanel)) {\n        switch (_this.state.swipeBackResult) {\n          case SwipeBackResults.fail:\n            _this.onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            _this.onSwipeBackSuccess();\n        }\n      }\n    });\n    _define_property(_assert_this_initialized(_this), \"onMoveX\", function (event) {\n      var _this_props_configProvider;\n      if (!_this.window || _this.props.platform !== Platform.IOS || _this.state.swipeBackPrevented || swipeBackExcluded(event) || _this.shouldDisableTransitionMotion()) {\n        return;\n      }\n      if (!((_this_props_configProvider = _this.props.configProvider) === null || _this_props_configProvider === void 0 ? void 0 : _this_props_configProvider.isWebView)) {\n        if ((event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA || event.startX >= _this.window.innerWidth - ViewInfiniteComponent.SWIPE_BACK_AREA) && !_this.state.browserSwipe) {\n          _this.setState({\n            browserSwipe: true\n          });\n        }\n        return;\n      }\n      if (!_this.props.onSwipeBack || _this.state.animated && event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA) {\n        return;\n      }\n      if (!_this.state.swipingBack && event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA && _this.props.history && _this.props.history.length > 1) {\n        if (_this.props.onSwipeBackStart) {\n          var payload = _this.props.onSwipeBackStart(_this.state.activePanel);\n          if (payload === \"prevent\") {\n            _this.setState({\n              swipeBackPrevented: true\n            });\n            return;\n          }\n        }\n        if (_this.state.activePanel !== null) {\n          var _this_props_scroll;\n          // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n          _this.blurActiveElement();\n          var prevScrolls = _this.scrolls[_this.state.activePanel] || [];\n          _this.scrolls = _object_spread_props(_object_spread({}, _this.scrolls), _define_property({}, _this.state.activePanel, _to_consumable_array(prevScrolls).concat([(_this_props_scroll = _this.props.scroll) === null || _this_props_scroll === void 0 ? void 0 : _this_props_scroll.getScroll().y])));\n        }\n        _this.setState({\n          swipingBack: true,\n          swipeBackStartX: event.startX,\n          swipeBackPrevPanel: _this.state.activePanel,\n          swipeBackNextPanel: _this.props.history.slice(-2)[0]\n        });\n      }\n      if (_this.state.swipingBack) {\n        var swipeBackShift;\n        if (event.shiftX < 0) {\n          swipeBackShift = 0;\n        } else if (event.shiftX > _this.window.innerWidth - _this.state.swipeBackStartX) {\n          swipeBackShift = _this.window.innerWidth;\n        } else {\n          swipeBackShift = event.shiftX;\n        }\n        _this.setState({\n          swipeBackShift: swipeBackShift\n        });\n      }\n    });\n    _define_property(_assert_this_initialized(_this), \"onEnd\", function (event) {\n      if (_this.state.swipingBack && _this.window) {\n        var speed = _this.state.swipeBackShift / event.duration * 1000;\n        if (_this.state.swipeBackShift === 0) {\n          _this.onSwipeBackCancel();\n        } else if (_this.state.swipeBackShift >= _this.window.innerWidth) {\n          _this.onSwipeBackSuccess();\n        } else if (speed > 250 || _this.state.swipeBackStartX + _this.state.swipeBackShift > _this.window.innerWidth / 2) {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.success\n          });\n        } else {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.fail\n          });\n        }\n      }\n      if (_this.state.swipeBackPrevented) {\n        _this.setState({\n          swipeBackPrevented: false\n        });\n      }\n    });\n    _this.state = {\n      animated: false,\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n      swipingBack: false,\n      swipeBackPrevented: false,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n      browserSwipe: false\n    };\n    return _this;\n  }\n  _create_class(ViewInfiniteComponent, [{\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }, {\n    key: \"panels\",\n    get: function get() {\n      return React.Children.toArray(this.props.children);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var id = getNavId(this.props);\n      if (id) {\n        scrollsCache[id] = this.scrolls;\n      }\n      if (this.animationFinishTimeout) {\n        clearTimeout(this.animationFinishTimeout);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this = this;\n      // Нужен переход\n      if (prevProps.activePanel !== this.props.activePanel && !prevState.swipingBack && !prevState.browserSwipe) {\n        var _this_props_scroll;\n        var isBack = false;\n        if (this.props.isBackCheck) {\n          isBack = this.props.isBackCheck({\n            from: prevProps.activePanel,\n            to: this.props.activePanel\n          });\n        } else {\n          var firstLayerId = this.panels.map(function (panel) {\n            return getNavId(panel.props, warn);\n          }).find(function (id) {\n            return id === prevProps.activePanel || id === _this.props.activePanel;\n          });\n          isBack = firstLayerId === this.props.activePanel;\n        }\n        this.blurActiveElement();\n        var prevScrolls = this.scrolls[prevProps.activePanel] || [];\n        var scrolls = _object_spread_props(_object_spread({}, this.scrolls), _define_property({}, prevProps.activePanel, _to_consumable_array(prevScrolls).concat([(_this_props_scroll = this.props.scroll) === null || _this_props_scroll === void 0 ? void 0 : _this_props_scroll.getScroll().y])));\n        this.scrolls = scrolls;\n        if (this.shouldDisableTransitionMotion()) {\n          this.flushTransition(prevProps.activePanel, isBack);\n        } else {\n          this.setState({\n            visiblePanels: [prevProps.activePanel, this.props.activePanel],\n            prevPanel: prevProps.activePanel,\n            nextPanel: this.props.activePanel,\n            activePanel: null,\n            animated: true,\n            isBack: isBack\n          });\n          // Фолбек анимации перехода\n          if (!animationEvent.supported) {\n            if (this.animationFinishTimeout) {\n              clearTimeout(this.animationFinishTimeout);\n            }\n            this.animationFinishTimeout = setTimeout(this.transitionEndHandler, this.props.platform === Platform.ANDROID || this.props.platform === Platform.VKCOM ? 300 : 600);\n          }\n        }\n      }\n      // Закончилась анимация свайпа назад\n      if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n        var nextPanel = this.state.swipeBackNextPanel;\n        var prevPanel = this.state.swipeBackPrevPanel;\n        var scrollPosition = undefined;\n        this.scrolls = _object_spread({}, this.scrolls);\n        if (prevPanel !== null) {\n          var prevPanelScrolls = _to_consumable_array(this.scrolls[prevPanel] || []).slice(0, -1);\n          this.scrolls[prevPanel] = prevPanelScrolls;\n        }\n        if (nextPanel !== null) {\n          var newPanelScrolls = _to_consumable_array(this.scrolls[nextPanel] || []);\n          scrollPosition = newPanelScrolls.pop();\n          this.scrolls[nextPanel] = newPanelScrolls;\n        }\n        this.setState({\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipeBackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel]\n        }, function () {\n          var _this_props_scroll;\n          (_this_props_scroll = _this.props.scroll) === null || _this_props_scroll === void 0 ? void 0 : _this_props_scroll.scrollTo(0, scrollPosition);\n          prevProps.onTransition && prevProps.onTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel\n          });\n        });\n      }\n      // Началась анимация завершения свайпа назад.\n      if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n        this.waitTransitionFinish(this.pickPanel(this.state.swipeBackNextPanel), this.swipingBackTransitionEndHandler);\n      }\n      // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n      if (prevState.swipeBackResult === SwipeBackResults.fail && !this.state.swipeBackResult && this.state.activePanel !== null) {\n        var _this_props_scroll1;\n        var newPanelScrolls1 = _to_consumable_array(this.scrolls[this.state.activePanel] || []);\n        var scrollPosition1 = newPanelScrolls1.pop();\n        this.scrolls = _object_spread_props(_object_spread({}, this.scrolls), _define_property({}, this.state.activePanel, newPanelScrolls1));\n        (_this_props_scroll1 = this.props.scroll) === null || _this_props_scroll1 === void 0 ? void 0 : _this_props_scroll1.scrollTo(0, scrollPosition1);\n      }\n      // Закончился Safari свайп\n      if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n        this.setState({\n          browserSwipe: false,\n          nextPanel: null,\n          prevPanel: null,\n          animated: false,\n          visiblePanels: [this.props.activePanel],\n          activePanel: this.props.activePanel\n        });\n      }\n    }\n  }, {\n    key: \"shouldDisableTransitionMotion\",\n    value: function shouldDisableTransitionMotion() {\n      var _this_props_configProvider, _this_props_splitCol;\n      return ((_this_props_configProvider = this.props.configProvider) === null || _this_props_configProvider === void 0 ? void 0 : _this_props_configProvider.transitionMotionEnabled) === false || !((_this_props_splitCol = this.props.splitCol) === null || _this_props_splitCol === void 0 ? void 0 : _this_props_splitCol.animate) || this.props.platform === Platform.VKCOM;\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(elem, eventHandler) {\n      if (transitionEvent.supported && transitionEvent.name && elem) {\n        elem.removeEventListener(transitionEvent.name, eventHandler);\n        elem.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        if (this.transitionFinishTimeout) {\n          clearTimeout(this.transitionFinishTimeout);\n        }\n        this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === Platform.ANDROID || this.props.platform === Platform.VKCOM ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"blurActiveElement\",\n    value: function blurActiveElement() {\n      var _this_document;\n      if (typeof this.window !== \"undefined\" && ((_this_document = this.document) === null || _this_document === void 0 ? void 0 : _this_document.activeElement)) {\n        this.document.activeElement.blur();\n      }\n    }\n  }, {\n    key: \"pickPanel\",\n    value: function pickPanel(id) {\n      if (id === null) {\n        return undefined;\n      }\n      return this.panelNodes[id];\n    }\n  }, {\n    key: \"flushTransition\",\n    value: function flushTransition(prevPanel, isBack) {\n      var _this = this;\n      var activePanel = this.props.activePanel;\n      var prevPanelScrolls = _to_consumable_array(this.scrolls[prevPanel] || []).slice(0, -1);\n      var newPanelScrolls = _to_consumable_array(this.scrolls[activePanel] || []);\n      var scrollPosition = isBack ? newPanelScrolls.pop() : 0;\n      if (isBack) {\n        var _obj;\n        this.scrolls = _object_spread_props(_object_spread({}, this.scrolls), (_obj = {}, _define_property(_obj, prevPanel, prevPanelScrolls), _define_property(_obj, activePanel, newPanelScrolls), _obj));\n      }\n      this.setState({\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack: undefined\n      }, function () {\n        var _this_props_scroll;\n        (_this_props_scroll = _this.props.scroll) === null || _this_props_scroll === void 0 ? void 0 : _this_props_scroll.scrollTo(0, isBack ? scrollPosition : 0);\n        _this.props.onTransition && _this.props.onTransition({\n          isBack: isBack,\n          from: prevPanel,\n          to: activePanel\n        });\n      });\n    }\n  }, {\n    key: \"onSwipeBackSuccess\",\n    value: function onSwipeBackSuccess() {\n      this.props.onSwipeBack && this.props.onSwipeBack();\n    }\n  }, {\n    key: \"onSwipeBackCancel\",\n    value: function onSwipeBackCancel() {\n      this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n      this.setState({\n        swipeBackPrevPanel: null,\n        swipeBackNextPanel: null,\n        swipingBack: false,\n        swipeBackResult: null,\n        swipeBackStartX: 0,\n        swipeBackShift: 0\n      });\n    }\n  }, {\n    key: \"calcPanelSwipeStyles\",\n    value: function calcPanelSwipeStyles(panelId) {\n      if (!canUseDOM || !this.window) {\n        return {};\n      }\n      var isPrev = panelId === this.state.swipeBackPrevPanel;\n      var isNext = panelId === this.state.swipeBackNextPanel;\n      if (!isPrev && !isNext || this.state.swipeBackResult) {\n        return {};\n      }\n      var prevPanelTranslate = \"\".concat(this.state.swipeBackShift, \"px\");\n      var nextPanelTranslate = \"\".concat(-50 + this.state.swipeBackShift * 100 / this.window.innerWidth / 2, \"%\");\n      var prevPanelShadow = 0.3 * (this.window.innerWidth - this.state.swipeBackShift) / this.window.innerWidth;\n      if (this.state.swipeBackResult) {\n        return isPrev ? {\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        } : {};\n      }\n      if (isNext) {\n        return {\n          transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n        };\n      }\n      if (isPrev) {\n        return {\n          transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        };\n      }\n      return {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var _this_props = this.props,\n        platform = _this_props.platform,\n        _1 = _this_props.activePanel,\n        splitCol = _this_props.splitCol,\n        configProvider = _this_props.configProvider,\n        history = _this_props.history,\n        id = _this_props.id,\n        nav = _this_props.nav,\n        onTransition = _this_props.onTransition,\n        onSwipeBack = _this_props.onSwipeBack,\n        onSwipeBackStart = _this_props.onSwipeBackStart,\n        onSwipeBackCancel = _this_props.onSwipeBackCancel,\n        window = _this_props.window,\n        document = _this_props.document,\n        scroll = _this_props.scroll,\n        isBackCheck = _this_props.isBackCheck,\n        className = _this_props.className,\n        restProps = _object_without_properties(_this_props, [\"platform\", \"activePanel\", \"splitCol\", \"configProvider\", \"history\", \"id\", \"nav\", \"onTransition\", \"onSwipeBack\", \"onSwipeBackStart\", \"onSwipeBackCancel\", \"window\", \"document\", \"scroll\", \"isBackCheck\", \"className\"]);\n      var _this_state = this.state,\n        prevPanel = _this_state.prevPanel,\n        nextPanel = _this_state.nextPanel,\n        activePanel = _this_state.activePanel,\n        isBack = _this_state.isBack,\n        animated = _this_state.animated,\n        swipeBackPrevPanel = _this_state.swipeBackPrevPanel,\n        swipeBackNextPanel = _this_state.swipeBackNextPanel,\n        swipeBackResult = _this_state.swipeBackResult,\n        swipingBack = _this_state.swipingBack;\n      var panels = this.panels.filter(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        return panelId !== undefined && _this.state.visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n      }).sort(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        var isPrevPanel = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        var isNextPanel = panelId === nextPanel || panelId === swipeBackNextPanel;\n        if (isNextPanel) {\n          return swipingBack || _this.state.isBack ? -1 : 1;\n        }\n        if (isPrevPanel) {\n          return swipingBack || _this.state.isBack ? 1 : -1;\n        }\n        return 0;\n      });\n      var disableAnimation = this.shouldDisableTransitionMotion();\n      return /*#__PURE__*/React.createElement(Touch, _object_spread_props(_object_spread({\n        Component: \"section\"\n      }, restProps), {\n        className: classNames(\"vkuiView\", platform === Platform.IOS && classNames(\"vkuiView--ios\", \"vkuiInternalView--ios\"), !disableAnimation && this.state.animated && \"vkuiView--animated\", !disableAnimation && this.state.swipingBack && \"vkuiView--swiping-back\", disableAnimation && \"vkuiView--no-motion\", className),\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vkuiView__panels\"\n      }, panels.map(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        var isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        var compensateScroll = isPrev || panelId === swipeBackNextPanel || panelId === nextPanel && isBack;\n        var isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n        var scrollList = panelId && _this.scrolls[panelId] || [];\n        var scroll = scrollList[scrollList.length - 1] || 0;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classNames(\"vkuiView__panel\", panelId === activePanel && \"vkuiView__panel--active\", panelId === prevPanel && \"vkuiView__panel--prev\", panelId === nextPanel && \"vkuiView__panel--next\", panelId === swipeBackPrevPanel && \"vkuiView__panel--swipe-back-prev\", panelId === swipeBackNextPanel && \"vkuiView__panel--swipe-back-next\", swipeBackResult === SwipeBackResults.success && \"vkuiView__panel--swipe-back-success\", swipeBackResult === SwipeBackResults.fail && \"vkuiView__panel--swipe-back-failed\"),\n          onAnimationEnd: isTransitionTarget ? _this.transitionEndHandler : undefined,\n          ref: function (el) {\n            return panelId !== undefined && (_this.panelNodes[panelId] = el);\n          },\n          style: _this.calcPanelSwipeStyles(panelId),\n          key: panelId\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"vkuiView__panel-in\",\n          style: {\n            marginTop: compensateScroll ? -scroll : undefined\n          }\n        }, /*#__PURE__*/React.createElement(NavTransitionProvider, {\n          entering: panelId === nextPanel || panelId === swipeBackNextPanel\n        }, panel)));\n      })));\n    }\n  }]);\n  return ViewInfiniteComponent;\n}(_React_Component = React.Component);\n_define_property(ViewInfiniteComponent, \"SWIPE_BACK_AREA\", 70);\n_define_property(ViewInfiniteComponent, \"defaultProps\", {\n  history: []\n});\nexport var ViewInfinite = withContext(withContext(withContext(withPlatform(withDOM(ViewInfiniteComponent)), SplitColContext, \"splitCol\"), ConfigProviderContext, \"configProvider\"), ScrollContext, \"scroll\");","map":{"version":3,"names":["React","classNames","withContext","withPlatform","canUseDOM","withDOM","getNavId","Platform","animationEvent","transitionEvent","warnOnce","ScrollContext","ConfigProviderContext","NavTransitionProvider","SplitColContext","Touch","swipeBackExcluded","warn","SwipeBackResults","scrollsCache","_React_Component","ViewInfiniteComponent","_superClass","props","_define_property","_assert_this_initialized","_this","undefined","e","includes","animationName","state","prevPanel","flushTransition","Boolean","isBack","propertyName","target","pickPanel","swipeBackNextPanel","swipeBackResult","fail","onSwipeBackCancel","success","onSwipeBackSuccess","event","_this_props_configProvider","window","platform","IOS","swipeBackPrevented","shouldDisableTransitionMotion","configProvider","isWebView","startX","SWIPE_BACK_AREA","innerWidth","browserSwipe","setState","onSwipeBack","animated","swipingBack","history","length","onSwipeBackStart","payload","activePanel","_this_props_scroll","blurActiveElement","prevScrolls","scrolls","_object_spread_props","_object_spread","_to_consumable_array","concat","scroll","getScroll","y","swipeBackStartX","swipeBackPrevPanel","slice","swipeBackShift","shiftX","speed","duration","visiblePanels","nextPanel","key","get","document","Children","toArray","children","componentWillUnmount","id","animationFinishTimeout","clearTimeout","componentDidUpdate","prevProps","prevState","isBackCheck","from","to","firstLayerId","panels","map","panel","find","supported","setTimeout","transitionEndHandler","ANDROID","VKCOM","scrollPosition","prevPanelScrolls","newPanelScrolls","pop","scrollTo","onTransition","waitTransitionFinish","swipingBackTransitionEndHandler","_this_props_scroll1","newPanelScrolls1","scrollPosition1","_this_props_splitCol","transitionMotionEnabled","splitCol","animate","elem","eventHandler","name","removeEventListener","addEventListener","transitionFinishTimeout","_this_document","activeElement","blur","panelNodes","_obj","calcPanelSwipeStyles","panelId","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","render","_this_props","_1","nav","className","restProps","_object_without_properties","_this_state","filter","sort","isPrevPanel","isNextPanel","disableAnimation","createElement","Component","onMoveX","onEnd","compensateScroll","isTransitionTarget","scrollList","onAnimationEnd","ref","el","style","marginTop","entering","ViewInfinite"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/components/View/ViewInfinite.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { withContext } from '../../hoc/withContext';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { canUseDOM, DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { Platform } from '../../lib/platform';\nimport { animationEvent, transitionEvent } from '../../lib/supportEvents';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HasPlatform } from '../../types';\nimport { ScrollContext, ScrollContextInterface } from '../AppRoot/ScrollContext';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n} from '../ConfigProvider/ConfigProviderContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { SplitColContext, SplitColContextProps } from '../SplitCol/SplitColContext';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { swipeBackExcluded } from './utils';\nimport styles from './View.module.css';\n\nconst warn = warnOnce('ViewInfinite');\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: Array<number | undefined>;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\ntype TransitionEventHandler = (e?: TransitionEvent) => void;\n\nlet scrollsCache: ViewsScrolls = {};\n\nexport type TransitionParams = { from: string | null; to: string | null };\n\nexport interface ViewInfiniteProps\n  extends React.HTMLAttributes<HTMLElement>,\n    HasPlatform,\n    NavIdProps {\n  activePanel: string;\n  onTransition?(params: TransitionParams & { isBack: boolean }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n  isBackCheck?(params: TransitionParams): boolean;\n  /**\n   * @ignore\n   */\n  splitCol?: SplitColContextProps;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  /**\n   * @ignore\n   */\n  scroll?: ScrollContextInterface;\n}\n\nexport interface ViewInfiniteState {\n  animated: boolean;\n\n  visiblePanels: Array<string | null>;\n  activePanel: string | null;\n  isBack?: boolean;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipeBackPrevented: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nclass ViewInfiniteComponent extends React.Component<\n  ViewInfiniteProps & DOMProps,\n  ViewInfiniteState\n> {\n  private static readonly SWIPE_BACK_AREA = 70;\n\n  constructor(props: ViewInfiniteProps) {\n    super(props);\n\n    this.state = {\n      animated: false,\n\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n\n      swipingBack: false,\n      swipeBackPrevented: false,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n\n      browserSwipe: false,\n    };\n  }\n\n  static defaultProps: Partial<ViewInfiniteProps> = {\n    history: [],\n  };\n\n  private scrolls = scrollsCache[getNavId(this.props, warn) as string] || {};\n  private transitionFinishTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n  private animationFinishTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  get panels() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  panelNodes: { [id: string]: HTMLDivElement | null } = {};\n\n  componentWillUnmount() {\n    const id = getNavId(this.props);\n    if (id) {\n      scrollsCache[id] = this.scrolls;\n    }\n    if (this.animationFinishTimeout) {\n      clearTimeout(this.animationFinishTimeout);\n    }\n  }\n\n  componentDidUpdate(prevProps: ViewInfiniteProps, prevState: ViewInfiniteState) {\n    // Нужен переход\n    if (\n      prevProps.activePanel !== this.props.activePanel &&\n      !prevState.swipingBack &&\n      !prevState.browserSwipe\n    ) {\n      let isBack = false;\n\n      if (this.props.isBackCheck) {\n        isBack = this.props.isBackCheck({\n          from: prevProps.activePanel,\n          to: this.props.activePanel,\n        });\n      } else {\n        const firstLayerId = this.panels\n          .map((panel) => getNavId(panel.props, warn))\n          .find((id) => id === prevProps.activePanel || id === this.props.activePanel);\n        isBack = firstLayerId === this.props.activePanel;\n      }\n\n      this.blurActiveElement();\n\n      const prevScrolls = this.scrolls[prevProps.activePanel] || [];\n      const scrolls = {\n        ...this.scrolls,\n        [prevProps.activePanel]: [...prevScrolls, this.props.scroll?.getScroll().y],\n      };\n      this.scrolls = scrolls;\n\n      if (this.shouldDisableTransitionMotion()) {\n        this.flushTransition(prevProps.activePanel, isBack);\n      } else {\n        this.setState({\n          visiblePanels: [prevProps.activePanel, this.props.activePanel],\n          prevPanel: prevProps.activePanel,\n          nextPanel: this.props.activePanel,\n          activePanel: null,\n          animated: true,\n          isBack,\n        });\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          if (this.animationFinishTimeout) {\n            clearTimeout(this.animationFinishTimeout);\n          }\n          this.animationFinishTimeout = setTimeout(\n            this.transitionEndHandler,\n            this.props.platform === Platform.ANDROID || this.props.platform === Platform.VKCOM\n              ? 300\n              : 600,\n          );\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n      const nextPanel = this.state.swipeBackNextPanel;\n      const prevPanel = this.state.swipeBackPrevPanel;\n      let scrollPosition: undefined | number = undefined;\n\n      this.scrolls = {\n        ...this.scrolls,\n      };\n\n      if (prevPanel !== null) {\n        const prevPanelScrolls = [...(this.scrolls[prevPanel] || [])].slice(0, -1);\n        this.scrolls[prevPanel] = prevPanelScrolls;\n      }\n      if (nextPanel !== null) {\n        const newPanelScrolls = [...(this.scrolls[nextPanel] || [])];\n        scrollPosition = newPanelScrolls.pop();\n        this.scrolls[nextPanel] = newPanelScrolls;\n      }\n\n      this.setState(\n        {\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipeBackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel],\n        },\n        () => {\n          this.props.scroll?.scrollTo(0, scrollPosition);\n          prevProps.onTransition &&\n            prevProps.onTransition({\n              isBack: true,\n              from: prevPanel,\n              to: nextPanel,\n            });\n        },\n      );\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n      this.waitTransitionFinish(\n        this.pickPanel(this.state.swipeBackNextPanel),\n        this.swipingBackTransitionEndHandler,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (\n      prevState.swipeBackResult === SwipeBackResults.fail &&\n      !this.state.swipeBackResult &&\n      this.state.activePanel !== null\n    ) {\n      const newPanelScrolls = [...(this.scrolls[this.state.activePanel] || [])];\n      const scrollPosition = newPanelScrolls.pop();\n      this.scrolls = {\n        ...this.scrolls,\n        [this.state.activePanel]: newPanelScrolls,\n      };\n\n      this.props.scroll?.scrollTo(0, scrollPosition);\n    }\n\n    // Закончился Safari свайп\n    if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n      this.setState({\n        browserSwipe: false,\n        nextPanel: null,\n        prevPanel: null,\n        animated: false,\n        visiblePanels: [this.props.activePanel],\n        activePanel: this.props.activePanel,\n      });\n    }\n  }\n\n  shouldDisableTransitionMotion(): boolean {\n    return (\n      this.props.configProvider?.transitionMotionEnabled === false ||\n      !this.props.splitCol?.animate ||\n      this.props.platform === Platform.VKCOM\n    );\n  }\n\n  waitTransitionFinish(\n    elem: HTMLElement | null | undefined,\n    eventHandler: TransitionEventHandler,\n  ): void {\n    if (transitionEvent.supported && transitionEvent.name && elem) {\n      elem.removeEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener,\n      );\n      elem.addEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener,\n      );\n    } else {\n      if (this.transitionFinishTimeout) {\n        clearTimeout(this.transitionFinishTimeout);\n      }\n\n      this.transitionFinishTimeout = setTimeout(\n        eventHandler,\n        this.props.platform === Platform.ANDROID || this.props.platform === Platform.VKCOM\n          ? 300\n          : 600,\n      );\n    }\n  }\n\n  blurActiveElement(): void {\n    if (typeof this.window !== 'undefined' && this.document?.activeElement) {\n      (this.document.activeElement as HTMLElement).blur();\n    }\n  }\n\n  pickPanel(id: string | null) {\n    if (id === null) {\n      return undefined;\n    }\n    return this.panelNodes[id];\n  }\n\n  flushTransition(prevPanel: string, isBack: boolean) {\n    const activePanel = this.props.activePanel;\n\n    const prevPanelScrolls = [...(this.scrolls[prevPanel] || [])].slice(0, -1);\n    const newPanelScrolls = [...(this.scrolls[activePanel] || [])];\n    const scrollPosition = isBack ? newPanelScrolls.pop() : 0;\n    if (isBack) {\n      this.scrolls = {\n        ...this.scrolls,\n        [prevPanel]: prevPanelScrolls,\n        [activePanel]: newPanelScrolls,\n      };\n    }\n\n    this.setState(\n      {\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack: undefined,\n      },\n      () => {\n        this.props.scroll?.scrollTo(0, isBack ? scrollPosition : 0);\n        this.props.onTransition &&\n          this.props.onTransition({ isBack, from: prevPanel, to: activePanel });\n      },\n    );\n  }\n\n  transitionEndHandler = (e?: React.AnimationEvent): void => {\n    if (\n      (!e ||\n        [\n          styles['vkui-animation-ios-next-forward'],\n          styles['vkui-animation-ios-prev-back'],\n          styles['vkui-animation-view-next-forward'],\n          styles['vkui-animation-view-prev-back'],\n        ].includes(e.animationName)) &&\n      this.state.prevPanel !== null\n    ) {\n      this.flushTransition(this.state.prevPanel, Boolean(this.state.isBack));\n    }\n  };\n\n  swipingBackTransitionEndHandler = (e?: TransitionEvent): void => {\n    // indexOf because of vendor prefixes in old browsers\n    if (\n      !e ||\n      (e.propertyName.includes('transform') &&\n        e.target === this.pickPanel(this.state.swipeBackNextPanel))\n    ) {\n      switch (this.state.swipeBackResult) {\n        case SwipeBackResults.fail:\n          this.onSwipeBackCancel();\n          break;\n        case SwipeBackResults.success:\n          this.onSwipeBackSuccess();\n      }\n    }\n  };\n\n  onSwipeBackSuccess(): void {\n    this.props.onSwipeBack && this.props.onSwipeBack();\n  }\n\n  onSwipeBackCancel(): void {\n    this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n    this.setState({\n      swipeBackPrevPanel: null,\n      swipeBackNextPanel: null,\n      swipingBack: false,\n      swipeBackResult: null,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n    });\n  }\n\n  onMoveX = (event: TouchEvent): void => {\n    if (\n      !this.window ||\n      this.props.platform !== Platform.IOS ||\n      this.state.swipeBackPrevented ||\n      swipeBackExcluded(event) ||\n      this.shouldDisableTransitionMotion()\n    ) {\n      return;\n    }\n\n    if (!this.props.configProvider?.isWebView) {\n      if (\n        (event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA ||\n          event.startX >= this.window.innerWidth - ViewInfiniteComponent.SWIPE_BACK_AREA) &&\n        !this.state.browserSwipe\n      ) {\n        this.setState({ browserSwipe: true });\n      }\n\n      return;\n    }\n\n    if (\n      !this.props.onSwipeBack ||\n      (this.state.animated && event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA)\n    ) {\n      return;\n    }\n\n    if (\n      !this.state.swipingBack &&\n      event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA &&\n      this.props.history &&\n      this.props.history.length > 1\n    ) {\n      if (this.props.onSwipeBackStart) {\n        const payload = this.props.onSwipeBackStart(this.state.activePanel);\n        if (payload === 'prevent') {\n          this.setState({ swipeBackPrevented: true });\n          return;\n        }\n      }\n\n      if (this.state.activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        this.blurActiveElement();\n        const prevScrolls = this.scrolls[this.state.activePanel] || [];\n        this.scrolls = {\n          ...this.scrolls,\n          [this.state.activePanel]: [...prevScrolls, this.props.scroll?.getScroll().y],\n        };\n      }\n\n      this.setState({\n        swipingBack: true,\n        swipeBackStartX: event.startX,\n        swipeBackPrevPanel: this.state.activePanel,\n        swipeBackNextPanel: this.props.history.slice(-2)[0],\n      });\n    }\n\n    if (this.state.swipingBack) {\n      let swipeBackShift;\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > this.window.innerWidth - this.state.swipeBackStartX) {\n        swipeBackShift = this.window.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n      this.setState({ swipeBackShift });\n    }\n  };\n\n  onEnd = (event: TouchEvent): void => {\n    if (this.state.swipingBack && this.window) {\n      const speed = (this.state.swipeBackShift / event.duration) * 1000;\n      if (this.state.swipeBackShift === 0) {\n        this.onSwipeBackCancel();\n      } else if (this.state.swipeBackShift >= this.window.innerWidth) {\n        this.onSwipeBackSuccess();\n      } else if (\n        speed > 250 ||\n        this.state.swipeBackStartX + this.state.swipeBackShift > this.window.innerWidth / 2\n      ) {\n        this.setState({ swipeBackResult: SwipeBackResults.success });\n      } else {\n        this.setState({ swipeBackResult: SwipeBackResults.fail });\n      }\n    }\n    if (this.state.swipeBackPrevented) {\n      this.setState({ swipeBackPrevented: false });\n    }\n  };\n\n  calcPanelSwipeStyles(panelId: string | undefined): React.CSSProperties {\n    if (!canUseDOM || !this.window) {\n      return {};\n    }\n\n    const isPrev = panelId === this.state.swipeBackPrevPanel;\n    const isNext = panelId === this.state.swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || this.state.swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${this.state.swipeBackShift}px`;\n    let nextPanelTranslate = `${\n      -50 + (this.state.swipeBackShift * 100) / this.window.innerWidth / 2\n    }%`;\n    let prevPanelShadow =\n      (0.3 * (this.window.innerWidth - this.state.swipeBackShift)) / this.window.innerWidth;\n\n    if (this.state.swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    const {\n      platform,\n      activePanel: _1,\n      splitCol,\n      configProvider,\n      history,\n      id,\n      nav,\n      onTransition,\n      onSwipeBack,\n      onSwipeBackStart,\n      onSwipeBackCancel,\n      window,\n      document,\n      scroll,\n      isBackCheck,\n      className,\n      ...restProps\n    } = this.props;\n    const {\n      prevPanel,\n      nextPanel,\n      activePanel,\n      isBack,\n      animated,\n      swipeBackPrevPanel,\n      swipeBackNextPanel,\n      swipeBackResult,\n      swipingBack,\n    } = this.state;\n\n    const panels = this.panels\n      .filter((panel) => {\n        const panelId = getNavId(panel.props, warn);\n\n        return (\n          (panelId !== undefined && this.state.visiblePanels.includes(panelId)) ||\n          panelId === swipeBackPrevPanel ||\n          panelId === swipeBackNextPanel\n        );\n      })\n      .sort((panel) => {\n        const panelId = getNavId(panel.props, warn);\n        const isPrevPanel = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        const isNextPanel = panelId === nextPanel || panelId === swipeBackNextPanel;\n\n        if (isNextPanel) {\n          return swipingBack || this.state.isBack ? -1 : 1;\n        }\n\n        if (isPrevPanel) {\n          return swipingBack || this.state.isBack ? 1 : -1;\n        }\n\n        return 0;\n      });\n\n    const disableAnimation = this.shouldDisableTransitionMotion();\n\n    return (\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        className={classNames(\n          styles['View'],\n          platform === Platform.IOS && classNames(styles['View--ios'], 'vkuiInternalView--ios'),\n          !disableAnimation && this.state.animated && styles['View--animated'],\n          !disableAnimation && this.state.swipingBack && styles['View--swiping-back'],\n          disableAnimation && styles['View--no-motion'],\n          className,\n        )}\n        onMoveX={this.onMoveX}\n        onEnd={this.onEnd}\n      >\n        <div className={styles['View__panels']}>\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n            const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n            const compensateScroll =\n              isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n            const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n            const scrollList = (panelId && this.scrolls[panelId]) || [];\n            const scroll = scrollList[scrollList.length - 1] || 0;\n\n            return (\n              <div\n                className={classNames(\n                  styles['View__panel'],\n                  panelId === activePanel && styles['View__panel--active'],\n                  panelId === prevPanel && styles['View__panel--prev'],\n                  panelId === nextPanel && styles['View__panel--next'],\n                  panelId === swipeBackPrevPanel && styles['View__panel--swipe-back-prev'],\n                  panelId === swipeBackNextPanel && styles['View__panel--swipe-back-next'],\n                  swipeBackResult === SwipeBackResults.success &&\n                    styles['View__panel--swipe-back-success'],\n                  swipeBackResult === SwipeBackResults.fail &&\n                    styles['View__panel--swipe-back-failed'],\n                )}\n                onAnimationEnd={isTransitionTarget ? this.transitionEndHandler : undefined}\n                ref={(el) => panelId !== undefined && (this.panelNodes[panelId] = el)}\n                style={this.calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                <div\n                  className={styles['View__panel-in']}\n                  style={{ marginTop: compensateScroll ? -scroll : undefined }}\n                >\n                  <NavTransitionProvider\n                    entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                  >\n                    {panel}\n                  </NavTransitionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Touch>\n    );\n  }\n}\n\nexport const ViewInfinite = withContext(\n  withContext(\n    withContext(\n      withPlatform(withDOM<ViewInfiniteProps>(ViewInfiniteComponent)),\n      SplitColContext,\n      'splitCol',\n    ),\n    ConfigProviderContext,\n    'configProvider',\n  ),\n  ScrollContext,\n  'scroll',\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}