{"ast":null,"code":"import { _ as _define_property } from \"@swc/helpers/_/_define_property\";\nimport { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport * as React from \"react\";\nimport { classNames } from \"@vkontakte/vkjs\";\n/**\n * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.\n * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.\n \n * @since 5.5.0\n * @see https://vkcom.github.io/VKUI/#/AspectRatio\n */\nexport function AspectRatio(_param) {\n  var ratio = _param.ratio,\n    children = _param.children,\n    _param_mode = _param.mode,\n    mode = _param_mode === void 0 ? \"stretch\" : _param_mode,\n    className = _param.className,\n    getRootRef = _param.getRootRef,\n    styleProp = _param.style,\n    props = _object_without_properties(_param, [\"ratio\", \"children\", \"mode\", \"className\", \"getRootRef\", \"style\"]);\n  var style = _define_property({}, \"--vkui_internal--aspect_ratio\", String(ratio));\n  return /*#__PURE__*/React.createElement(\"div\", _object_spread({\n    className: classNames(\"vkuiAspectRatio\", mode === \"stretch\" && \"vkuiAspectRatio--mode-stretch\", className),\n    style: _object_spread({}, styleProp, style),\n    ref: getRootRef\n  }, props), children);\n}","map":{"version":3,"names":["React","classNames","AspectRatio","_param","ratio","children","_param_mode","mode","className","getRootRef","styleProp","style","props","_object_without_properties","_define_property","String","createElement","_object_spread","ref"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/components/AspectRatio/AspectRatio.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { CSSCustomProperties, HasRootRef } from '../../types';\nimport styles from './AspectRatio.module.css';\n\nexport interface AspectRatioProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement> {\n  className?: string;\n  /**\n   * По умолчанию, вложенный контент будет растягиваться и заполнять весь блок.\n   */\n  mode?: 'stretch' | 'none';\n  children: React.ReactNode;\n  /**\n   * Например 16 / 9, 4 / 3, 1920 / 1080\n   */\n  ratio: number;\n}\n\n/**\n * `AspectRatio` позволяет поддерживать постоянное соотношение ширины и высоты.\n * Его можно использовать для отображения изображений, карт, видео и других медиафайлов.\n \n * @since 5.5.0\n * @see https://vkcom.github.io/VKUI/#/AspectRatio\n */\nexport function AspectRatio({\n  ratio,\n  children,\n  mode = 'stretch',\n  className,\n  getRootRef,\n  style: styleProp,\n  ...props\n}: AspectRatioProps): JSX.Element {\n  const style: React.CSSProperties & CSSCustomProperties = {\n    ['--vkui_internal--aspect_ratio']: String(ratio),\n  };\n\n  return (\n    <div\n      className={classNames(\n        styles.AspectRatio,\n        mode === 'stretch' && styles['AspectRatio--mode-stretch'],\n        className,\n      )}\n      style={{ ...styleProp, ...style }}\n      ref={getRootRef}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,UAAU,QAAQ;AAmB3B;;;;;;;AAOA,OAAO,SAASC,YAAYC,MAAA;MAC1BC,KAAA,GAD0BD,MAAA,CAC1BC,KAAA;IACAC,QAAA,GAF0BF,MAAA,CAE1BE,QAAA;IAAAC,WAAA,GAF0BH,MAAA,CAG1BI,IAAA;IAAAA,IAAA,GAAAD,WAAA,cAAO,YAAAA,WAAA;IACPE,SAAA,GAJ0BL,MAAA,CAI1BK,SAAA;IACAC,UAAA,GAL0BN,MAAA,CAK1BM,UAAA;IACAC,SAAO,GANmBP,MAAA,CAM1BQ,KAAA;IACGC,KAAA,GAAAC,0BAAA,CAPuBV,MAAA,GAC1B,SACA,YACA,QACA,aACA,cACA,Q;EAGA,IAAMQ,KAAA,GACJG,gBAAA,KAAC,iCAAkCC,MAAA,CAAOX,KAAA;EAG5C,oBACEJ,KAAA,CAAAgB,aAAA,CAAC,OAAAC,cAAA;IACCT,SAAA,EAAWP,UAAA,oBAETM,IAAA,KAAS,8CACTC,SAAA;IAEFG,KAAA,EAAOM,cAAA,KAAKP,SAAA,EAAcC,KAAA;IAC1BO,GAAA,EAAKT;KACDG,KAAA,GAEHP,QAAA;AAGP"},"metadata":{},"sourceType":"module","externalDependencies":[]}