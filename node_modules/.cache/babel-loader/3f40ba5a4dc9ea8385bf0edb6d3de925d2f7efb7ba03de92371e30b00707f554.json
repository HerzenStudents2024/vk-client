{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _object_without_properties } from \"@swc/helpers/_/_object_without_properties\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { _ as _type_of } from \"@swc/helpers/_/_type_of\";\nimport * as React from \"react\";\nimport { classNames, noop } from \"@vkontakte/vkjs\";\nimport { useChipsSelect } from \"../../hooks/useChipsSelect\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useDOM } from \"../../lib/dom\";\nimport { defaultFilterFn } from \"../../lib/select\";\nimport { ChipsInputBase, chipsInputDefaultProps } from \"../ChipsInputBase/ChipsInputBase\";\nimport { CustomSelectDropdown } from \"../CustomSelectDropdown/CustomSelectDropdown\";\nimport { CustomSelectOption } from \"../CustomSelectOption/CustomSelectOption\";\nimport { DropdownIcon } from \"../DropdownIcon/DropdownIcon\";\nimport { FormField } from \"../FormField/FormField\";\nimport { IconButton } from \"../IconButton/IconButton\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nvar FOCUS_ACTION_NEXT = \"next\";\nvar FOCUS_ACTION_PREV = \"prev\";\nvar chipsSelectDefaultProps = _object_spread_props(_object_spread({}, chipsInputDefaultProps), {\n  emptyText: \"Ничего не найдено\",\n  creatableText: \"Создать значение\",\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption: function renderOption(props) {\n    return /*#__PURE__*/React.createElement(CustomSelectOption, props);\n  }\n});\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\nexport var ChipsSelect = function (props) {\n  var _popperPlacement, _filteredOptions;\n  var propsWithDefault = _object_spread({}, chipsSelectDefaultProps, props);\n  var style = propsWithDefault.style,\n    onFocus = propsWithDefault.onFocus,\n    onBlur = propsWithDefault.onBlur,\n    onKeyDown = propsWithDefault.onKeyDown,\n    className = propsWithDefault.className,\n    fetching = propsWithDefault.fetching,\n    renderOption = propsWithDefault.renderOption,\n    emptyText = propsWithDefault.emptyText,\n    getRef = propsWithDefault.getRef,\n    getRootRef = propsWithDefault.getRootRef,\n    disabled = propsWithDefault.disabled,\n    placeholder = propsWithDefault.placeholder,\n    tabIndex = propsWithDefault.tabIndex,\n    getOptionValue = propsWithDefault.getOptionValue,\n    getOptionLabel = propsWithDefault.getOptionLabel,\n    showSelected = propsWithDefault.showSelected,\n    getNewOptionData = propsWithDefault.getNewOptionData,\n    renderChip = propsWithDefault.renderChip,\n    popupDirection = propsWithDefault.popupDirection,\n    creatable = propsWithDefault.creatable,\n    filterFn = propsWithDefault.filterFn,\n    inputValue = propsWithDefault.inputValue,\n    creatableText = propsWithDefault.creatableText,\n    closeAfterSelect = propsWithDefault.closeAfterSelect,\n    onChangeStart = propsWithDefault.onChangeStart,\n    before = propsWithDefault.before,\n    icon = propsWithDefault.icon,\n    options = propsWithDefault.options,\n    fixDropdownWidth = propsWithDefault.fixDropdownWidth,\n    forceDropdownPortal = propsWithDefault.forceDropdownPortal,\n    restProps = _object_without_properties(propsWithDefault, [\"style\", \"onFocus\", \"onBlur\", \"onKeyDown\", \"className\", \"fetching\", \"renderOption\", \"emptyText\", \"getRef\", \"getRootRef\", \"disabled\", \"placeholder\", \"tabIndex\", \"getOptionValue\", \"getOptionLabel\", \"showSelected\", \"getNewOptionData\", \"renderChip\", \"popupDirection\", \"creatable\", \"filterFn\", \"inputValue\", \"creatableText\", \"closeAfterSelect\", \"onChangeStart\", \"before\", \"icon\", \"options\", \"fixDropdownWidth\", \"forceDropdownPortal\"]);\n  var document = useDOM().document;\n  var _React_useState = _sliced_to_array(React.useState(undefined), 2),\n    popperPlacement = _React_useState[0],\n    setPopperPlacement = _React_useState[1];\n  var scrollBoxRef = React.useRef(null);\n  var rootRef = useExternRef(getRef);\n  var _useChipsSelect = useChipsSelect(propsWithDefault),\n    fieldValue = _useChipsSelect.fieldValue,\n    _useChipsSelect_selectedOptions = _useChipsSelect.selectedOptions,\n    selectedOptions = _useChipsSelect_selectedOptions === void 0 ? [] : _useChipsSelect_selectedOptions,\n    opened = _useChipsSelect.opened,\n    setOpened = _useChipsSelect.setOpened,\n    addOptionFromInput = _useChipsSelect.addOptionFromInput,\n    filteredOptions = _useChipsSelect.filteredOptions,\n    addOption = _useChipsSelect.addOption,\n    handleInputChange = _useChipsSelect.handleInputChange,\n    clearInput = _useChipsSelect.clearInput,\n    focusedOption = _useChipsSelect.focusedOption,\n    setFocusedOption = _useChipsSelect.setFocusedOption,\n    focusedOptionIndex = _useChipsSelect.focusedOptionIndex,\n    setFocusedOptionIndex = _useChipsSelect.setFocusedOptionIndex;\n  var showCreatable = Boolean(creatable && creatableText && !filteredOptions.length && fieldValue);\n  var handleFocus = function (e) {\n    setOpened(true);\n    setFocusedOptionIndex(null);\n    onFocus(e);\n  };\n  var handleBlur = function (e) {\n    onBlur(e);\n    // Не добавляем значение, если его нужно выбрать строго из списка\n    if (!e.defaultPrevented && !creatable) {\n      e.preventDefault();\n    }\n  };\n  var handleClickOutside = function (e) {\n    var _rootRef_current;\n    if (e.target !== rootRef.current && !((_rootRef_current = rootRef.current) === null || _rootRef_current === void 0 ? void 0 : _rootRef_current.contains(e.target))) {\n      setOpened(false);\n    }\n  };\n  var chipsSelectOptions = React.useRef([]).current;\n  var scrollToElement = function (index) {\n    var center = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var dropdown = scrollBoxRef.current;\n    var item = chipsSelectOptions[index];\n    if (!item || !dropdown) {\n      return;\n    }\n    var dropdownHeight = dropdown.offsetHeight;\n    var scrollTop = dropdown.scrollTop;\n    var itemTop = item.offsetTop;\n    var itemHeight = item.offsetHeight;\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n  var focusOptionByIndex = function (index, oldIndex) {\n    var length = filteredOptions.length;\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n    if (index === oldIndex) {\n      return;\n    }\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n  var focusOption = function (nextIndex, type) {\n    var index = nextIndex === null ? -1 : nextIndex;\n    if (type === FOCUS_ACTION_NEXT) {\n      index = index + 1;\n    } else if (type === FOCUS_ACTION_PREV) {\n      index = index - 1;\n    }\n    focusOptionByIndex(index, focusedOptionIndex);\n  };\n  var handleKeyDown = function (e) {\n    onKeyDown(e);\n    if (e.key === \"ArrowUp\" && !e.defaultPrevented) {\n      e.preventDefault();\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n    if (e.key === \"ArrowDown\" && !e.defaultPrevented) {\n      e.preventDefault();\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n    if (e.key === \"Enter\" && !e.defaultPrevented && opened) {\n      if (focusedOptionIndex != null) {\n        var option = filteredOptions[focusedOptionIndex];\n        if (option) {\n          onChangeStart(e, option);\n          if (!e.defaultPrevented) {\n            addOption(option);\n            setFocusedOptionIndex(null);\n            clearInput();\n            closeAfterSelect && setOpened(false);\n            e.preventDefault();\n          }\n        } else if (!creatable) {\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n    if ([\"Escape\", \"Tab\"].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n  React.useEffect(function () {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n  useGlobalEventListener(document, \"click\", handleClickOutside);\n  var renderChipWrapper = function (renderChipProps) {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n    var onRemoveWrapper = function (e, value) {\n      var _e, _e1, _renderChipProps_onRemove, _renderChipProps;\n      (_e = e) === null || _e === void 0 ? void 0 : _e.preventDefault();\n      (_e1 = e) === null || _e1 === void 0 ? void 0 : _e1.stopPropagation();\n      (_renderChipProps_onRemove = (_renderChipProps = renderChipProps).onRemove) === null || _renderChipProps_onRemove === void 0 ? void 0 : _renderChipProps_onRemove.call(_renderChipProps, e, value);\n    };\n    return renderChip(_object_spread_props(_object_spread({}, renderChipProps), {\n      onRemove: onRemoveWrapper\n    }));\n  };\n  var isPopperDirectionTop = (_popperPlacement = popperPlacement) === null || _popperPlacement === void 0 ? void 0 : _popperPlacement.includes(\"top\");\n  var onPlacementChange = React.useCallback(function (placement) {\n    setPopperPlacement(placement);\n  }, [setPopperPlacement]);\n  var onDropdownMouseLeave = React.useCallback(function () {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n  var toggleOpened = function () {\n    setOpened(function (prevOpened) {\n      return !prevOpened;\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormField, {\n    getRootRef: rootRef,\n    style: style,\n    className: classNames(\"vkuiChipsSelect\", opened && (isPopperDirectionTop ? \"vkuiChipsSelect--pop-up\" : \"vkuiChipsSelect--pop-down\"), className),\n    disabled: disabled,\n    role: \"application\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": restProps.readOnly,\n    after: /*#__PURE__*/React.createElement(IconButton, {\n      className: \"vkuiChipsSelect__dropdown\",\n      activeMode: \"\",\n      hoverMode: \"\",\n      // TODO [>=6]: add label customization\n      \"aria-label\": opened ? \"Скрыть\" : \"Развернуть\",\n      onClick: toggleOpened\n    }, icon !== null && icon !== void 0 ? icon : /*#__PURE__*/React.createElement(DropdownIcon, {\n      className: \"vkuiChipsSelect__icon\",\n      opened: opened\n    })),\n    before: before\n  }, /*#__PURE__*/React.createElement(ChipsInputBase, _object_spread_props(_object_spread({}, restProps), {\n    tabIndex: tabIndex,\n    value: selectedOptions,\n    inputValue: fieldValue,\n    getNewOptionData: getNewOptionData,\n    getOptionLabel: getOptionLabel,\n    getOptionValue: getOptionValue,\n    renderChip: renderChipWrapper,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    placeholder: placeholder,\n    getRef: getRef,\n    disabled: disabled,\n    onInputChange: handleInputChange\n  }))), opened && /*#__PURE__*/React.createElement(CustomSelectDropdown, {\n    targetRef: rootRef,\n    placement: popupDirection,\n    scrollBoxRef: scrollBoxRef,\n    onPlacementChange: onPlacementChange,\n    onMouseLeave: onDropdownMouseLeave,\n    fetching: fetching,\n    sameWidth: fixDropdownWidth,\n    forcePortal: forceDropdownPortal\n  }, showCreatable && /*#__PURE__*/React.createElement(CustomSelectOption, {\n    hovered: focusedOptionIndex === 0,\n    onMouseDown: addOptionFromInput,\n    onMouseEnter: function () {\n      return setFocusedOptionIndex(0);\n    }\n  }, creatableText), !((_filteredOptions = filteredOptions) === null || _filteredOptions === void 0 ? void 0 : _filteredOptions.length) && !showCreatable && emptyText ? /*#__PURE__*/React.createElement(Footnote, {\n    className: \"vkuiChipsSelect__empty\"\n  }, emptyText) : filteredOptions.map(function (option, index) {\n    var label = getOptionLabel(option);\n    var hovered = focusedOption && getOptionValue(option) === getOptionValue(focusedOption);\n    var selected = selectedOptions.find(function (selectedOption) {\n      return getOptionValue(selectedOption) === getOptionValue(option);\n    });\n    var value = getOptionValue(option);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(typeof value === \"undefined\" ? \"undefined\" : _type_of(value), \"-\").concat(value)\n    }, renderOption({\n      option: option,\n      hovered: Boolean(hovered),\n      children: label,\n      selected: !!selected,\n      getRootRef: function (e) {\n        if (e) {\n          return chipsSelectOptions[index] = e;\n        }\n        return undefined;\n      },\n      onMouseDown: function (e) {\n        var _onChangeStart;\n        (_onChangeStart = onChangeStart) === null || _onChangeStart === void 0 ? void 0 : _onChangeStart(e, option);\n        if (!e.defaultPrevented) {\n          closeAfterSelect && setOpened(false);\n          addOption(option);\n          clearInput();\n        }\n      },\n      onMouseEnter: function () {\n        return setFocusedOptionIndex(index);\n      }\n    }));\n  })));\n};","map":{"version":3,"names":["React","classNames","noop","useChipsSelect","useExternRef","useGlobalEventListener","useDOM","defaultFilterFn","ChipsInputBase","chipsInputDefaultProps","CustomSelectDropdown","CustomSelectOption","DropdownIcon","FormField","IconButton","Footnote","FOCUS_ACTION_NEXT","FOCUS_ACTION_PREV","chipsSelectDefaultProps","_object_spread_props","_object_spread","emptyText","creatableText","onChangeStart","creatable","fetching","showSelected","closeAfterSelect","options","filterFn","renderOption","props","createElement","ChipsSelect","_popperPlacement","_filteredOptions","propsWithDefault","style","onFocus","onBlur","onKeyDown","className","getRef","getRootRef","disabled","placeholder","tabIndex","getOptionValue","getOptionLabel","getNewOptionData","renderChip","popupDirection","inputValue","before","icon","fixDropdownWidth","forceDropdownPortal","restProps","_object_without_properties","document","_React_useState","_sliced_to_array","useState","undefined","popperPlacement","setPopperPlacement","scrollBoxRef","useRef","rootRef","_useChipsSelect","fieldValue","_useChipsSelect_selectedOptions","selectedOptions","opened","setOpened","addOptionFromInput","filteredOptions","addOption","handleInputChange","clearInput","focusedOption","setFocusedOption","focusedOptionIndex","setFocusedOptionIndex","showCreatable","Boolean","length","handleFocus","e","handleBlur","defaultPrevented","preventDefault","handleClickOutside","_rootRef_current","target","current","contains","chipsSelectOptions","scrollToElement","index","center","arguments","dropdown","item","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","oldIndex","focusOption","nextIndex","type","handleKeyDown","key","option","includes","useEffect","renderChipWrapper","renderChipProps","onRemoveWrapper","value","_e","_e1","_renderChipProps_onRemove","_renderChipProps","stopPropagation","onRemove","call","isPopperDirectionTop","onPlacementChange","useCallback","placement","onDropdownMouseLeave","toggleOpened","prevOpened","Fragment","role","readOnly","after","activeMode","hoverMode","onClick","onInputChange","targetRef","onMouseLeave","sameWidth","forcePortal","hovered","onMouseDown","onMouseEnter","map","label","selected","find","selectedOption","concat","_type_of","children","_onChangeStart"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/components/ChipsSelect/ChipsSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { useChipsSelect } from '../../hooks/useChipsSelect';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useDOM } from '../../lib/dom';\nimport type { Placement } from '../../lib/floating';\nimport { defaultFilterFn } from '../../lib/select';\nimport { ChipOption, ChipValue, RenderChip } from '../Chip/Chip';\nimport { ChipsInputProps } from '../ChipsInput/ChipsInput';\nimport { ChipsInputBase, chipsInputDefaultProps } from '../ChipsInputBase/ChipsInputBase';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField } from '../FormField/FormField';\nimport { IconButton } from '../IconButton/IconButton';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport styles from './ChipsSelect.module.css';\n\nexport interface ChipsSelectProps<Option extends ChipOption>\n  extends Omit<ChipsInputProps<Option>, 'after'> {\n  popupDirection?: 'top' | 'bottom';\n  options?: Option[];\n  filterFn?:\n    | false\n    | ((\n        value?: string,\n        option?: Option,\n        getOptionLabel?: Pick<ChipsInputProps<Option>, 'getOptionLabel'>['getOptionLabel'],\n      ) => boolean);\n  /**\n   * Возможность создавать чипы которых нет в списке (по enter или с помощью пункта в меню, см creatableText)\n   */\n  creatable?: boolean;\n  /**\n   * Отрисовка лоадера вместо списка опций в выпадающем списке\n   */\n  fetching?: boolean;\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Показывать или скрывать уже выбранные опции\n   */\n  showSelected?: boolean;\n  /**\n   * Текст для пункта создающего чипы при клике, так же отвечает за то будет ли показан этот пункт (показывается после того как в списке не отсанется опций)\n   */\n  creatableText?: string;\n  /**\n   * Текст который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Событие срабатывающее перед onChange\n   */\n  onChangeStart?: (e: React.MouseEvent | React.KeyboardEvent, option: Option) => void;\n  /**\n   * Закрытие выпадающего списка после выбора элемента\n   */\n  closeAfterSelect?: boolean;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  /**\n   * Иконка раскрывающегося списка\n   */\n  icon?: React.ReactNode;\n  /**\n   * Добавляет значение в список на событие `onBlur` (использовать вместе с `creatable`)\n   */\n  addOnBlur?: boolean;\n}\n\ntype FocusActionType = 'next' | 'prev';\n\nconst FOCUS_ACTION_NEXT: FocusActionType = 'next';\nconst FOCUS_ACTION_PREV: FocusActionType = 'prev';\n\nconst chipsSelectDefaultProps: ChipsSelectProps<any> = {\n  ...chipsInputDefaultProps,\n  emptyText: 'Ничего не найдено',\n  creatableText: 'Создать значение',\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption(props) {\n    return <CustomSelectOption {...props} />;\n  },\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\nexport const ChipsSelect = <Option extends ChipOption>(props: ChipsSelectProps<Option>) => {\n  const propsWithDefault = { ...chipsSelectDefaultProps, ...props };\n  const {\n    style,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    className,\n    fetching,\n    renderOption,\n    emptyText,\n    getRef,\n    getRootRef,\n    disabled,\n    placeholder,\n    tabIndex,\n    getOptionValue,\n    getOptionLabel,\n    showSelected,\n    getNewOptionData,\n    renderChip,\n    popupDirection,\n    creatable,\n    filterFn,\n    inputValue,\n    creatableText,\n    closeAfterSelect,\n    onChangeStart,\n    before,\n    icon,\n    options,\n    fixDropdownWidth,\n    forceDropdownPortal,\n    ...restProps\n  } = propsWithDefault;\n\n  const { document } = useDOM();\n\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement | undefined>(undefined);\n\n  const scrollBoxRef = React.useRef<HTMLDivElement>(null);\n  const rootRef = useExternRef(getRef);\n  const {\n    fieldValue,\n    selectedOptions = [],\n    opened,\n    setOpened,\n    addOptionFromInput,\n    filteredOptions,\n    addOption,\n    handleInputChange,\n    clearInput,\n    focusedOption,\n    setFocusedOption,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n  } = useChipsSelect(propsWithDefault);\n\n  const showCreatable = Boolean(\n    creatable && creatableText && !filteredOptions.length && fieldValue,\n  );\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setOpened(true);\n    setFocusedOptionIndex(null);\n    onFocus!(e);\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    onBlur!(e);\n\n    // Не добавляем значение, если его нужно выбрать строго из списка\n    if (!e.defaultPrevented && !creatable) {\n      e.preventDefault();\n    }\n  };\n\n  const handleClickOutside = (e: MouseEvent) => {\n    if (e.target !== rootRef.current && !rootRef.current?.contains(e.target as Node)) {\n      setOpened(false);\n    }\n  };\n\n  const chipsSelectOptions = React.useRef<HTMLElement[]>([]).current;\n\n  const scrollToElement = (index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = chipsSelectOptions[index];\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n\n  const focusOptionByIndex = (index: number, oldIndex: number | null) => {\n    const { length } = filteredOptions;\n\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n\n  const focusOption = (nextIndex: number | null, type: FocusActionType) => {\n    let index = nextIndex === null ? -1 : nextIndex;\n\n    if (type === FOCUS_ACTION_NEXT) {\n      index = index + 1;\n    } else if (type === FOCUS_ACTION_PREV) {\n      index = index - 1;\n    }\n\n    focusOptionByIndex(index, focusedOptionIndex);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown!(e);\n\n    if (e.key === 'ArrowUp' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n\n    if (e.key === 'ArrowDown' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n\n    if (e.key === 'Enter' && !e.defaultPrevented && opened) {\n      if (focusedOptionIndex != null) {\n        const option = filteredOptions[focusedOptionIndex];\n\n        if (option) {\n          onChangeStart!(e, option);\n\n          if (!e.defaultPrevented) {\n            addOption(option);\n            setFocusedOptionIndex(null);\n            clearInput();\n            closeAfterSelect && setOpened(false);\n            e.preventDefault();\n          }\n        } else if (!creatable) {\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n\n    if (['Escape', 'Tab'].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n\n  useGlobalEventListener(document, 'click', handleClickOutside);\n\n  const renderChipWrapper = (renderChipProps: RenderChip<Option> | undefined) => {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n    const onRemoveWrapper = (e: React.MouseEvent | undefined, value: ChipValue | undefined) => {\n      e?.preventDefault();\n      e?.stopPropagation();\n\n      renderChipProps.onRemove?.(e, value);\n    };\n\n    return renderChip!({\n      ...renderChipProps,\n      onRemove: onRemoveWrapper,\n    });\n  };\n\n  const isPopperDirectionTop = popperPlacement?.includes('top');\n\n  const onPlacementChange = React.useCallback(\n    (placement?: Placement) => {\n      setPopperPlacement(placement);\n    },\n    [setPopperPlacement],\n  );\n\n  const onDropdownMouseLeave = React.useCallback(() => {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n\n  const toggleOpened = () => {\n    setOpened((prevOpened) => !prevOpened);\n  };\n\n  return (\n    <>\n      <FormField\n        getRootRef={rootRef}\n        style={style}\n        className={classNames(\n          styles['ChipsSelect'],\n          opened &&\n            (isPopperDirectionTop\n              ? styles['ChipsSelect--pop-up']\n              : styles['ChipsSelect--pop-down']),\n          className,\n        )}\n        disabled={disabled}\n        role=\"application\"\n        aria-disabled={disabled}\n        aria-readonly={restProps.readOnly}\n        after={\n          <IconButton\n            className={styles['ChipsSelect__dropdown']}\n            activeMode=\"\"\n            hoverMode=\"\"\n            // TODO [>=6]: add label customization\n            aria-label={opened ? 'Скрыть' : 'Развернуть'}\n            onClick={toggleOpened}\n          >\n            {icon ?? <DropdownIcon className={styles['ChipsSelect__icon']} opened={opened} />}\n          </IconButton>\n        }\n        before={before}\n      >\n        <ChipsInputBase\n          {...restProps}\n          tabIndex={tabIndex}\n          value={selectedOptions}\n          inputValue={fieldValue}\n          getNewOptionData={getNewOptionData}\n          getOptionLabel={getOptionLabel}\n          getOptionValue={getOptionValue}\n          renderChip={renderChipWrapper}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          getRef={getRef}\n          disabled={disabled}\n          onInputChange={handleInputChange}\n        />\n      </FormField>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={rootRef}\n          placement={popupDirection}\n          scrollBoxRef={scrollBoxRef}\n          onPlacementChange={onPlacementChange}\n          onMouseLeave={onDropdownMouseLeave}\n          fetching={fetching}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n        >\n          {showCreatable && (\n            <CustomSelectOption\n              hovered={focusedOptionIndex === 0}\n              onMouseDown={addOptionFromInput}\n              onMouseEnter={() => setFocusedOptionIndex(0)}\n            >\n              {creatableText}\n            </CustomSelectOption>\n          )}\n          {!filteredOptions?.length && !showCreatable && emptyText ? (\n            <Footnote className={styles['ChipsSelect__empty']}>{emptyText}</Footnote>\n          ) : (\n            filteredOptions.map((option: Option, index: number) => {\n              const label = getOptionLabel!(option);\n              const hovered =\n                focusedOption && getOptionValue!(option) === getOptionValue!(focusedOption);\n              const selected = selectedOptions.find((selectedOption: Option) => {\n                return getOptionValue!(selectedOption) === getOptionValue!(option);\n              });\n              const value = getOptionValue!(option);\n\n              return (\n                <React.Fragment key={`${typeof value}-${value}`}>\n                  {renderOption!({\n                    option,\n                    hovered: Boolean(hovered),\n                    children: label,\n                    selected: !!selected,\n                    getRootRef: (e) => {\n                      if (e) {\n                        return (chipsSelectOptions[index] = e);\n                      }\n                      return undefined;\n                    },\n                    onMouseDown: (e: React.MouseEvent<HTMLDivElement>) => {\n                      onChangeStart?.(e, option);\n\n                      if (!e.defaultPrevented) {\n                        closeAfterSelect && setOpened(false);\n                        addOption(option);\n                        clearInput();\n                      }\n                    },\n                    onMouseEnter: () => setFocusedOptionIndex(index),\n                  })}\n                </React.Fragment>\n              );\n            })\n          )}\n        </CustomSelectDropdown>\n      )}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}