{"ast":null,"code":"import { _ as _object_spread } from \"@swc/helpers/_/_object_spread\";\nimport { _ as _object_spread_props } from \"@swc/helpers/_/_object_spread_props\";\nimport { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport { _ as _to_consumable_array } from \"@swc/helpers/_/_to_consumable_array\";\nimport * as React from \"react\";\nimport { isFunction, noop } from \"@vkontakte/vkjs\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { ModalType } from \"./types\";\nfunction getModals(children) {\n  return React.Children.toArray(children);\n}\nvar warn = warnOnce(\"ModalRoot\");\nexport function modalTransitionReducer(state, action) {\n  if (action.type === \"setActive\" && action.id !== state.activeModal) {\n    var nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    var prevModal = state.exitingModal || state.activeModal;\n    var history = state.history ? _to_consumable_array(state.history) : [];\n    var isBack = Boolean(nextModal && history.includes(nextModal));\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history: history,\n      isBack: isBack\n    };\n  }\n  if (action.type === \"entered\" && action.id === state.enteringModal) {\n    return _object_spread_props(_object_spread({}, state), {\n      enteringModal: null\n    });\n  }\n  if (action.type === \"exited\" && action.id === state.exitingModal) {\n    return _object_spread_props(_object_spread({}, state), {\n      exitingModal: null\n    });\n  }\n  if (action.type === \"inited\" && action.id === state.activeModal) {\n    return _object_spread_props(_object_spread({}, state), {\n      enteringModal: action.id\n    });\n  }\n  return state;\n}\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(activeModal, children) {\n  var onOpen = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : noop,\n    onOpened = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : noop,\n    onClose = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : noop,\n    onClosed = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : noop,\n    initModal = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : noop;\n  var onEnter = function onEnter() {\n    var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onOpen)) {\n        modalState.onOpen();\n      } else if (isFunction(onOpen) && modalState.id) {\n        onOpen(modalState.id);\n      }\n    }\n  };\n  var onExit = function onExit() {\n    var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose) && modalState.id) {\n        onClose(modalState.id);\n      }\n    }\n  };\n  var modalsState = React.useRef({}).current;\n  getModals(children).forEach(function (Modal) {\n    var modalProps = Modal.props;\n    var id = getNavId(modalProps, warn);\n    var state = id !== undefined && modalsState[id] || {\n      id: id !== null && id !== void 0 ? id : null\n    };\n    state.onOpen = Modal.props.onOpen;\n    state.onOpened = Modal.props.onOpened;\n    state.onClose = Modal.props.onClose;\n    state.onClosed = Modal.props.onClosed;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === \"number\") {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n  var isMissing = activeModal && !modalsState[activeModal];\n  var safeActiveModal = isMissing ? null : activeModal;\n  var _React_useReducer = _sliced_to_array(React.useReducer(modalTransitionReducer, {\n      activeModal: safeActiveModal,\n      enteringModal: null,\n      exitingModal: null,\n      history: safeActiveModal ? [safeActiveModal] : [],\n      isBack: false\n    }), 2),\n    transitionState = _React_useReducer[0],\n    dispatchTransition = _React_useReducer[1];\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(function () {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === \"development\" && isMissing) {\n      warn(\"Переход невозможен - модальное окно (страница) \".concat(activeModal, \" не существует\"), \"error\");\n    }\n    dispatchTransition({\n      type: \"setActive\",\n      id: safeActiveModal !== null && safeActiveModal !== void 0 ? safeActiveModal : null\n    });\n  }, [activeModal]);\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(function () {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({\n        type: \"inited\",\n        id: transitionState.activeModal\n      });\n    }\n  }, [transitionState.activeModal]);\n  var isCard = function (id) {\n    var _modalsState_id;\n    return id != null && ((_modalsState_id = modalsState[id]) === null || _modalsState_id === void 0 ? void 0 : _modalsState_id.type) === ModalType.CARD;\n  };\n  var onEntered = React.useCallback(function (id) {\n    if (id) {\n      var modalState = modalsState[id];\n      if (isFunction(modalState.onOpened)) {\n        modalState.onOpened();\n      } else if (isFunction(onOpened)) {\n        onOpened(id);\n      }\n    }\n    dispatchTransition({\n      type: \"entered\",\n      id: id\n    });\n  }, [modalsState, onOpened]);\n  var onExited = React.useCallback(function (id) {\n    if (id) {\n      var modalState = modalsState[id];\n      if (isFunction(modalState.onClosed)) {\n        modalState.onClosed();\n      } else if (isFunction(onClosed)) {\n        onClosed(id);\n      }\n    }\n    dispatchTransition({\n      type: \"exited\",\n      id: id\n    });\n  }, [modalsState, onClosed]);\n  var delayEnter = Boolean(transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)));\n  var getModalState = React.useCallback(function (id) {\n    return id ? modalsState[id] : undefined;\n  }, [modalsState]);\n  return _object_spread_props(_object_spread({\n    onEnter: onEnter,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExited: onExited\n  }, transitionState), {\n    delayEnter: delayEnter,\n    getModalState: getModalState\n  });\n}\nexport function withModalManager() {\n  var initModal = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : noop;\n  return function (Wrapped) {\n    return function WithModalManager(props) {\n      var transitionManager = useModalManager(props.activeModal, props.children, props.onOpen, props.onOpened, props.onClose, props.onClosed, initModal);\n      return /*#__PURE__*/React.createElement(Wrapped, _object_spread({}, props, transitionManager));\n    };\n  };\n}","map":{"version":3,"names":["React","isFunction","noop","getNavId","useIsomorphicLayoutEffect","warnOnce","ModalType","getModals","children","Children","toArray","warn","modalTransitionReducer","state","action","type","id","activeModal","nextModal","prevModal","exitingModal","history","_to_consumable_array","isBack","Boolean","includes","splice","indexOf","push","enteringModal","_object_spread_props","_object_spread","useModalManager","onOpen","arguments","length","onOpened","onClose","onClosed","initModal","onEnter","modalState","transitionState","modalsState","onExit","useRef","current","forEach","Modal","modalProps","props","undefined","settlingHeight","isMissing","safeActiveModal","_React_useReducer","_sliced_to_array","useReducer","dispatchTransition","process","env","NODE_ENV","concat","isCard","_modalsState_id","CARD","onEntered","useCallback","onExited","delayEnter","getModalState","withModalManager","Wrapped","WithModalManager","transitionManager","createElement"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/components/ModalRoot/useModalManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { isFunction, noop } from '@vkontakte/vkjs';\nimport { getNavId } from '../../lib/getNavId';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HasChildren } from '../../types';\nimport { ModalsState, ModalsStateEntry, ModalType } from './types';\n\ninterface ModalTransitionState {\n  activeModal?: string | null;\n  enteringModal?: string | null;\n  exitingModal?: string | null;\n  history?: string[];\n  isBack?: boolean | null;\n}\n\nexport interface ModalTransitionProps extends ModalTransitionState {\n  onEnter: VoidFunction;\n  onEntered: (id: string | null) => void;\n  onExit: VoidFunction;\n  onExited: (id: string | null) => void;\n  getModalState: (id: string | undefined | null) => ModalsStateEntry | undefined;\n  delayEnter: boolean;\n}\n\nfunction getModals(children: React.ReactNode | React.ReactNode[]) {\n  return React.Children.toArray(children) as React.ReactElement[];\n}\n\nconst warn = warnOnce('ModalRoot');\n\nexport function modalTransitionReducer(\n  state: ModalTransitionState,\n  action: {\n    type: 'setActive' | 'entered' | 'exited' | 'inited';\n    id: string | null;\n  },\n): ModalTransitionState {\n  if (action.type === 'setActive' && action.id !== state.activeModal) {\n    const nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    const prevModal = state.exitingModal || state.activeModal;\n    let history = state.history ? [...state.history] : [];\n    const isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history,\n      isBack,\n    };\n  }\n  if (action.type === 'entered' && action.id === state.enteringModal) {\n    return { ...state, enteringModal: null };\n  }\n  if (action.type === 'exited' && action.id === state.exitingModal) {\n    return { ...state, exitingModal: null };\n  }\n  if (action.type === 'inited' && action.id === state.activeModal) {\n    return { ...state, enteringModal: action.id };\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(\n  activeModal: string | null | undefined,\n  children: React.ReactNode | React.ReactNode[],\n  onOpen: (id: string) => void = noop,\n  onOpened: (id: string) => void = noop,\n  onClose: (id: string) => void = noop,\n  onClosed: (id: string) => void = noop,\n  initModal: (state: ModalsStateEntry) => void = noop,\n): ModalTransitionProps {\n  const modalsState = React.useRef<ModalsState>({}).current;\n  getModals(children).forEach((Modal) => {\n    const modalProps = Modal.props;\n    const id = getNavId(modalProps, warn);\n    const state: ModalsStateEntry = (id !== undefined && modalsState[id]) || {\n      id: id ?? null,\n    };\n\n    state.onOpen = Modal.props.onOpen;\n    state.onOpened = Modal.props.onOpened;\n    state.onClose = Modal.props.onClose;\n    state.onClosed = Modal.props.onClosed;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === 'number') {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n\n  const isMissing = activeModal && !modalsState[activeModal];\n  const safeActiveModal = isMissing ? null : activeModal;\n  const [transitionState, dispatchTransition] = React.useReducer(modalTransitionReducer, {\n    activeModal: safeActiveModal,\n    enteringModal: null,\n    exitingModal: null,\n    history: safeActiveModal ? [safeActiveModal] : [],\n    isBack: false,\n  });\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(() => {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === 'development' && isMissing) {\n      warn(`Переход невозможен - модальное окно (страница) ${activeModal} не существует`, 'error');\n    }\n    dispatchTransition({ type: 'setActive', id: safeActiveModal ?? null });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(() => {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({ type: 'inited', id: transitionState.activeModal });\n    }\n  }, [transitionState.activeModal]);\n\n  const isCard = (id: string | null | undefined) =>\n    id != null && modalsState[id]?.type === ModalType.CARD;\n  const onEntered = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onOpened)) {\n          modalState.onOpened();\n        } else if (isFunction(onOpened)) {\n          onOpened(id);\n        }\n      }\n\n      dispatchTransition({ type: 'entered', id });\n    },\n    [modalsState, onOpened],\n  );\n  const onExited = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onClosed)) {\n          modalState.onClosed();\n        } else if (isFunction(onClosed)) {\n          onClosed(id);\n        }\n      }\n\n      dispatchTransition({ type: 'exited', id });\n    },\n    [modalsState, onClosed],\n  );\n  const delayEnter = Boolean(\n    transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)),\n  );\n  const getModalState = React.useCallback(\n    (id: string | undefined | null) => (id ? modalsState[id] : undefined),\n    [modalsState],\n  );\n\n  function onEnter() {\n    const modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onOpen)) {\n        modalState.onOpen();\n      } else if (isFunction(onOpen) && modalState.id) {\n        onOpen(modalState.id);\n      }\n    }\n  }\n\n  function onExit() {\n    const modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose) && modalState.id) {\n        onClose(modalState.id);\n      }\n    }\n  }\n\n  return {\n    onEnter,\n    onEntered,\n    onExit,\n    onExited,\n    ...transitionState,\n    delayEnter,\n    getModalState,\n  };\n}\n\ntype WithModalManager<Props extends ModalTransitionProps> = HasChildren &\n  Omit<Props, keyof ModalTransitionProps> & {\n    activeModal?: string | null;\n  };\n\nexport function withModalManager(initModal: (a: ModalsStateEntry) => void = noop) {\n  return function <Props extends ModalTransitionProps>(\n    Wrapped: React.ComponentType<Props>,\n  ): React.ComponentType<WithModalManager<Props>> {\n    return function WithModalManager(props) {\n      const transitionManager = useModalManager(\n        props.activeModal,\n        props.children,\n        (props as any).onOpen,\n        (props as any).onOpened,\n        (props as any).onClose,\n        (props as any).onClosed,\n        initModal,\n      );\n      return <Wrapped {...(props as any)} {...transitionManager} />;\n    };\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}