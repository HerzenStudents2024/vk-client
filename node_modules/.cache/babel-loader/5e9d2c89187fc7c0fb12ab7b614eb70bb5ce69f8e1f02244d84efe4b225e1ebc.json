{"ast":null,"code":"import { _ as _sliced_to_array } from \"@swc/helpers/_/_sliced_to_array\";\nimport * as React from \"react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nvar initialState = {\n  type: \"\",\n  viewportWidth: 0,\n  viewportHeight: 0\n};\nfunction resolveAdaptivity(e) {\n  var _e_detail = e.detail,\n    type = _e_detail.type,\n    data = _e_detail.data;\n  if (type !== \"VKWebAppUpdateConfig\" || !data) {\n    return null;\n  }\n  var adaptivity = data.adaptivity,\n    viewportWidth = data.viewport_width,\n    viewportHeight = data.viewport_height;\n  var bridgeAdaptivity = {\n    type: \"\",\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0\n  };\n  switch (adaptivity) {\n    case \"force_mobile\":\n    case \"force_mobile_compact\":\n    case \"adaptive\":\n      bridgeAdaptivity.type = adaptivity;\n  }\n  return bridgeAdaptivity;\n}\nvkBridge.subscribe(function (e) {\n  var bridgeAdaptivity = resolveAdaptivity(e);\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\nexport function useBridgeAdaptivity() {\n  var _React_useState = _sliced_to_array(React.useState(initialState), 2),\n    bridgeAdaptivity = _React_useState[0],\n    setBridgeAdaptivity = _React_useState[1];\n  useIsomorphicLayoutEffect(function () {\n    var bridgeListener = function bridgeListener(e) {\n      var newBridgeAdaptivity = resolveAdaptivity(e);\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    };\n    vkBridge.subscribe(bridgeListener);\n    return function () {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n  return bridgeAdaptivity;\n}","map":{"version":3,"names":["React","vkBridge","useIsomorphicLayoutEffect","initialState","type","viewportWidth","viewportHeight","resolveAdaptivity","e","_e_detail","detail","data","adaptivity","viewport_width","viewport_height","bridgeAdaptivity","isFinite","subscribe","useBridgeAdaptivity","_React_useState","_sliced_to_array","useState","setBridgeAdaptivity","bridgeListener","newBridgeAdaptivity","unsubscribe"],"sources":["/Users/evgeny/Desktop/VsCodeProjects/vk-client/vk-client/node_modules/@vkontakte/vkui/src/hooks/useBridgeAdaptivity.ts"],"sourcesContent":["import * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nexport interface BridgeAdaptivity {\n  type: '' | 'force_mobile' | 'force_mobile_compact' | 'adaptive';\n  viewportWidth: number;\n  viewportHeight: number;\n}\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nlet initialState: BridgeAdaptivity = {\n  type: '',\n  viewportWidth: 0,\n  viewportHeight: 0,\n};\n\nfunction resolveAdaptivity(e: BridgeEvent): BridgeAdaptivity | null {\n  const { type, data } = e.detail;\n\n  if (type !== 'VKWebAppUpdateConfig' || !data) {\n    return null;\n  }\n\n  const { adaptivity, viewport_width: viewportWidth, viewport_height: viewportHeight } = data;\n\n  const bridgeAdaptivity: BridgeAdaptivity = {\n    type: '',\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0,\n  };\n\n  switch (adaptivity) {\n    case 'force_mobile':\n    case 'force_mobile_compact':\n    case 'adaptive':\n      bridgeAdaptivity.type = adaptivity;\n  }\n\n  return bridgeAdaptivity;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const bridgeAdaptivity = resolveAdaptivity(e);\n\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\n\nexport function useBridgeAdaptivity(): BridgeAdaptivity {\n  const [bridgeAdaptivity, setBridgeAdaptivity] = React.useState<BridgeAdaptivity>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function bridgeListener(e: BridgeEvent) {\n      const newBridgeAdaptivity = resolveAdaptivity(e);\n\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    }\n\n    vkBridge.subscribe(bridgeListener);\n    return () => {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n\n  return bridgeAdaptivity;\n}\n"],"mappings":";AAAA,YAAYA,KAAA,MAAW;AACvB,OAAOC,QAAA,MAAc;AACrB,SAASC,yBAAyB,QAAQ;AAiB1C,IAAIC,YAAA,GAAiC;EACnCC,IAAA,EAAM;EACNC,aAAA,EAAe;EACfC,cAAA,EAAgB;AAClB;AAEA,SAASC,kBAAkBC,CAAc;EACvC,IAAuBC,SAAA,GAAAD,CAAA,CAAEE,MAAM;IAAvBN,IAAA,GAAeK,SAAA,CAAfL,IAAA;IAAMO,IAAA,GAASF,SAAA,CAATE,IAAA;EAEd,IAAIP,IAAA,KAAS,0BAA0B,CAACO,IAAA,EAAM;IAC5C,OAAO;EACT;EAEA,IAAQC,UAAA,GAA+ED,IAAA,CAA/EC,UAAA;IAAYP,aAAgB,GAAmDM,IAAA,CAAnEE,cAAA;IAA+BP,cAAiB,GAAmBK,IAAA,CAApCG,eAAA;EAEnD,IAAMC,gBAAA,GAAqC;IACzCX,IAAA,EAAM;IACNC,aAAA,EAAeW,QAAA,CAASX,aAAA,IAAiB,CAACA,aAAA,GAAgB;IAC1DC,cAAA,EAAgBU,QAAA,CAASV,cAAA,IAAkB,CAACA,cAAA,GAAiB;EAC/D;EAEA,QAAQM,UAAA;IACN,KAAK;IACL,KAAK;IACL,KAAK;MACHG,gBAAA,CAAiBX,IAAI,GAAGQ,UAAA;EAC5B;EAEA,OAAOG,gBAAA;AACT;AAEAd,QAAA,CAASgB,SAAS,CAAC,UAACT,CAAA;EAClB,IAAMO,gBAAA,GAAmBR,iBAAA,CAAkBC,CAAA;EAE3C,IAAIO,gBAAA,EAAkB;IACpBZ,YAAA,GAAeY,gBAAA;EACjB;AACF;AAEA,OAAO,SAASG,oBAAA;EACd,IAAgDC,eAAA,GAAAC,gBAAA,CAAApB,KAAA,CAAMqB,QAAQ,CAAmBlB,YAAA;IAA1EY,gBAAA,GAAyCI,eAAA;IAAvBG,mBAAA,GAAuBH,eAAA;EAEhDjB,yBAAA,CAA0B;QACfqB,cAAA,GAAT,SAASA,eAAef,CAAc;MACpC,IAAMgB,mBAAA,GAAsBjB,iBAAA,CAAkBC,CAAA;MAE9C,IAAIgB,mBAAA,EAAqB;QACvBF,mBAAA,CAAoBE,mBAAA;MACtB;IACF;IAEAvB,QAAA,CAASgB,SAAS,CAACM,cAAA;IACnB,OAAO;MACLtB,QAAA,CAASwB,WAAW,CAACF,cAAA;IACvB;EACF,GAAG,EAAE;EAEL,OAAOR,gBAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}