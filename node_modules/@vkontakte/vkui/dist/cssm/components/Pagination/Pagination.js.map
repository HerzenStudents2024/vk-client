{"version":3,"sources":["../../../../src/components/Pagination/Pagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon24ChevronCompactLeft, Icon24ChevronCompactRight } from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { PaginationPageType, usePagination } from '../../hooks/usePagination';\nimport { SizeType } from '../../lib/adaptivity';\nimport type { HasRootRef } from '../../types';\nimport { Button } from '../Button/Button';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './Pagination.module.css';\n\nfunction getPageAriaLabelDefault(page: number, isCurrent: boolean): string {\n  return isCurrent ? `${page} страница` : `Перейти на ${page} страницу`;\n}\n\nexport interface PaginationProps\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'>,\n    HasRootRef<HTMLElement> {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n  /**\n   * Блокировка всех кнопок.\n   */\n  disabled?: boolean;\n  /**\n   * Переопределение `aria-label` для кнопки навигации назад.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  prevButtonAriaLabel?: string;\n  /**\n   * Переопределение `aria-label` для кнопки навигации вперёд.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  nextButtonAriaLabel?: string;\n  /**\n   * Функция для переопределения и/или локализации `aria-label` атрибута.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  getPageAriaLabel?(page: number, isCurrent: boolean): string;\n  onChange?(page: number): void;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Pagination\n */\nexport const Pagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages = 1,\n  disabled,\n  getPageAriaLabel = getPageAriaLabelDefault,\n  prevButtonAriaLabel = 'Перейти на предыдущую страницу',\n  nextButtonAriaLabel = 'Перейти на следующую страницу',\n  getRootRef,\n  onChange,\n  ...resetProps\n}: PaginationProps) => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const pages = usePagination({\n    currentPage,\n    totalPages,\n    siblingCount,\n    boundaryCount,\n  });\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const handlePrevClick = React.useCallback(() => {\n    if (onChange && !isFirstPage) {\n      onChange(currentPage - 1);\n    }\n  }, [currentPage, isFirstPage, onChange]);\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      const page: string = event.currentTarget.dataset.page || '1';\n      onChange?.(Number(page));\n    },\n    [onChange],\n  );\n\n  const handleNextClick = React.useCallback(() => {\n    if (onChange && !isLastPage) {\n      onChange(currentPage + 1);\n    }\n  }, [currentPage, isLastPage, onChange]);\n\n  const renderPages = React.useCallback(\n    (page: PaginationPageType) => {\n      switch (page) {\n        case 'start-ellipsis':\n        case 'end-ellipsis':\n          return (\n            <li key={page}>\n              <Text\n                className={classNames(\n                  styles['Pagination__page'],\n                  styles['Pagination__page--type-ellipsis'],\n                  sizeY === 'none' && styles['Pagination__page--sizeY-none'],\n                  sizeY === SizeType.COMPACT && styles['Pagination__page--sizeY-compact'],\n                  disabled && styles['Pagination__page--disabled'],\n                )}\n              >\n                &#8230;\n              </Text>\n            </li>\n          );\n        default: {\n          const isCurrent = page === currentPage;\n          return (\n            <li key={page}>\n              <Tappable\n                className={classNames(\n                  styles['Pagination__page'],\n                  sizeY === 'none' && styles['Pagination__page--sizeY-none'],\n                  sizeY === SizeType.COMPACT && styles['Pagination__page--sizeY-compact'],\n                  isCurrent && styles['Pagination__page--current'],\n                  disabled && styles['Pagination__page--disabled'],\n                )}\n                activeMode={styles['Pagination__page--state-active']}\n                hoverMode={styles['Pagination__page--state-hover']}\n                hasActive={!isCurrent}\n                hasHover={!isCurrent}\n                focusVisibleMode=\"outside\"\n                disabled={disabled}\n                data-page={page}\n                aria-current={isCurrent ? true : undefined}\n                aria-label={getPageAriaLabel(page, isCurrent)}\n                onClick={handleClick}\n              >\n                <Text normalize={false}>{page}</Text>\n              </Tappable>\n            </li>\n          );\n        }\n      }\n    },\n    [sizeY, currentPage, disabled, getPageAriaLabel, handleClick],\n  );\n\n  return (\n    <nav role=\"navigation\" aria-label=\"Навигация по страницам\" ref={getRootRef} {...resetProps}>\n      <ul className={styles['Pagination__list']}>\n        <li className={styles['Pagination__prevButtonContainer']}>\n          <Button\n            size=\"l\"\n            before={<Icon24ChevronCompactLeft width={24} />}\n            appearance=\"accent\"\n            mode=\"tertiary\"\n            disabled={isFirstPage || disabled}\n            aria-label={prevButtonAriaLabel}\n            onClick={handlePrevClick}\n          />\n        </li>\n        {pages.map(renderPages)}\n        <li className={styles['Pagination__nextButtonContainer']}>\n          <Button\n            size=\"l\"\n            after={<Icon24ChevronCompactRight width={24} />}\n            appearance=\"accent\"\n            mode=\"tertiary\"\n            disabled={isLastPage || disabled}\n            aria-label={nextButtonAriaLabel}\n            onClick={handleNextClick}\n          />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n"],"names":["React","Icon24ChevronCompactLeft","Icon24ChevronCompactRight","classNames","useAdaptivity","usePagination","SizeType","Button","Tappable","Text","styles","getPageAriaLabelDefault","page","isCurrent","Pagination","currentPage","siblingCount","boundaryCount","totalPages","disabled","getPageAriaLabel","prevButtonAriaLabel","nextButtonAriaLabel","getRootRef","onChange","resetProps","sizeY","pages","isFirstPage","isLastPage","handlePrevClick","useCallback","handleClick","event","currentTarget","dataset","Number","handleNextClick","renderPages","li","key","className","COMPACT","activeMode","hoverMode","hasActive","hasHover","focusVisibleMode","data-page","aria-current","undefined","aria-label","onClick","normalize","nav","role","ref","ul","size","before","width","appearance","mode","map","after"],"mappings":"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"}