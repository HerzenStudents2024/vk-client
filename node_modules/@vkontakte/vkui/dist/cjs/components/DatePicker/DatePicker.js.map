{"version":3,"sources":["../../../../src/components/DatePicker/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, leadingZero } from '@vkontakte/vkjs';\nimport { range } from '../../helpers/range';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { Input } from '../Input/Input';\nimport styles from './DatePicker.module.css';\n\nconst DefaultMonths: string[] = [\n  'Января',\n  'Февраля',\n  'Марта',\n  'Апреля',\n  'Мая',\n  'Июня',\n  'Июля',\n  'Августа',\n  'Сентября',\n  'Октября',\n  'Ноября',\n  'Декабря',\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'defaultValue' | 'min' | 'max'> {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: 'top' | 'bottom';\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({ day = 0, month = 0, year = 0 }: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split('-');\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst DatePickerCustom = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  monthNames,\n  day = 0,\n  month = 0,\n  year = 0,\n  onDateChange,\n  disabled,\n  className,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange?.({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <div className={classNames(styles['DatePicker'], className)} {...restProps}>\n      <div className={styles['DatePicker__container']}>\n        <div className={styles['DatePicker__day']}>\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__month']}>\n          <CustomSelect\n            className={styles['DatePicker__monthSelect']}\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__year']}>\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input type=\"hidden\" name={name} value={convertToInputFormat({ day, month, year })} />\n    </div>\n  );\n};\n\nconst DatePickerNative = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  day,\n  month,\n  year,\n  onDateChange,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const defProps =\n    day && month && year ? { defaultValue: convertToInputFormat({ day, month, year }) } : {};\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onDateChange?.(parseInputDate(e.currentTarget.value));\n    },\n    [onDateChange],\n  );\n  return (\n    <Input\n      {...restProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n */\nexport const DatePicker = ({ defaultValue, ...props }: DatePickerProps) => {\n  const hasPointer = useAdaptivityHasPointer();\n  const [value, setValue] = React.useState<Partial<DatePickerDateFormat>>(() => ({\n    day: defaultValue?.day || 0,\n    month: defaultValue?.month || 0,\n    year: defaultValue?.year || 0,\n  }));\n\n  const onDateChange = React.useCallback(\n    (update: DatePickerDateFormat) => {\n      setValue(update);\n      props.onDateChange && props.onDateChange({ ...update });\n    },\n    [props],\n  );\n\n  const Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n"],"names":["DatePicker","DefaultMonths","convertToInputFormat","day","month","year","leadingZero","parseInputDate","date","splited","split","Number","getMonthMaxDay","Date","getDate","DatePickerCustom","name","min","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","monthNames","onDateChange","disabled","className","restProps","onSelectChange","e","target","value","dayOptions","range","map","label","String","monthOptions","index","yearOptions","div","classNames","CustomSelect","options","placeholder","onChange","input","type","DatePickerNative","defProps","onStringChange","React","useCallback","currentTarget","Input","props","hasPointer","useAdaptivityHasPointer","useState","setValue","update","Cmp"],"mappings":"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"}