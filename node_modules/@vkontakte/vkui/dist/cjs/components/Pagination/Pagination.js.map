{"version":3,"sources":["../../../../src/components/Pagination/Pagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon24ChevronCompactLeft, Icon24ChevronCompactRight } from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { PaginationPageType, usePagination } from '../../hooks/usePagination';\nimport { SizeType } from '../../lib/adaptivity';\nimport type { HasRootRef } from '../../types';\nimport { Button } from '../Button/Button';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Text } from '../Typography/Text/Text';\nimport styles from './Pagination.module.css';\n\nfunction getPageAriaLabelDefault(page: number, isCurrent: boolean): string {\n  return isCurrent ? `${page} страница` : `Перейти на ${page} страницу`;\n}\n\nexport interface PaginationProps\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'onChange'>,\n    HasRootRef<HTMLElement> {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n  /**\n   * Блокировка всех кнопок.\n   */\n  disabled?: boolean;\n  /**\n   * Переопределение `aria-label` для кнопки навигации назад.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  prevButtonAriaLabel?: string;\n  /**\n   * Переопределение `aria-label` для кнопки навигации вперёд.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  nextButtonAriaLabel?: string;\n  /**\n   * Функция для переопределения и/или локализации `aria-label` атрибута.\n   * По умолчанию используется текст на \"ru_RU\".\n   */\n  getPageAriaLabel?(page: number, isCurrent: boolean): string;\n  onChange?(page: number): void;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Pagination\n */\nexport const Pagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages = 1,\n  disabled,\n  getPageAriaLabel = getPageAriaLabelDefault,\n  prevButtonAriaLabel = 'Перейти на предыдущую страницу',\n  nextButtonAriaLabel = 'Перейти на следующую страницу',\n  getRootRef,\n  onChange,\n  ...resetProps\n}: PaginationProps) => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const pages = usePagination({\n    currentPage,\n    totalPages,\n    siblingCount,\n    boundaryCount,\n  });\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const handlePrevClick = React.useCallback(() => {\n    if (onChange && !isFirstPage) {\n      onChange(currentPage - 1);\n    }\n  }, [currentPage, isFirstPage, onChange]);\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      const page: string = event.currentTarget.dataset.page || '1';\n      onChange?.(Number(page));\n    },\n    [onChange],\n  );\n\n  const handleNextClick = React.useCallback(() => {\n    if (onChange && !isLastPage) {\n      onChange(currentPage + 1);\n    }\n  }, [currentPage, isLastPage, onChange]);\n\n  const renderPages = React.useCallback(\n    (page: PaginationPageType) => {\n      switch (page) {\n        case 'start-ellipsis':\n        case 'end-ellipsis':\n          return (\n            <li key={page}>\n              <Text\n                className={classNames(\n                  styles['Pagination__page'],\n                  styles['Pagination__page--type-ellipsis'],\n                  sizeY === 'none' && styles['Pagination__page--sizeY-none'],\n                  sizeY === SizeType.COMPACT && styles['Pagination__page--sizeY-compact'],\n                  disabled && styles['Pagination__page--disabled'],\n                )}\n              >\n                &#8230;\n              </Text>\n            </li>\n          );\n        default: {\n          const isCurrent = page === currentPage;\n          return (\n            <li key={page}>\n              <Tappable\n                className={classNames(\n                  styles['Pagination__page'],\n                  sizeY === 'none' && styles['Pagination__page--sizeY-none'],\n                  sizeY === SizeType.COMPACT && styles['Pagination__page--sizeY-compact'],\n                  isCurrent && styles['Pagination__page--current'],\n                  disabled && styles['Pagination__page--disabled'],\n                )}\n                activeMode={styles['Pagination__page--state-active']}\n                hoverMode={styles['Pagination__page--state-hover']}\n                hasActive={!isCurrent}\n                hasHover={!isCurrent}\n                focusVisibleMode=\"outside\"\n                disabled={disabled}\n                data-page={page}\n                aria-current={isCurrent ? true : undefined}\n                aria-label={getPageAriaLabel(page, isCurrent)}\n                onClick={handleClick}\n              >\n                <Text normalize={false}>{page}</Text>\n              </Tappable>\n            </li>\n          );\n        }\n      }\n    },\n    [sizeY, currentPage, disabled, getPageAriaLabel, handleClick],\n  );\n\n  return (\n    <nav role=\"navigation\" aria-label=\"Навигация по страницам\" ref={getRootRef} {...resetProps}>\n      <ul className={styles['Pagination__list']}>\n        <li className={styles['Pagination__prevButtonContainer']}>\n          <Button\n            size=\"l\"\n            before={<Icon24ChevronCompactLeft width={24} />}\n            appearance=\"accent\"\n            mode=\"tertiary\"\n            disabled={isFirstPage || disabled}\n            aria-label={prevButtonAriaLabel}\n            onClick={handlePrevClick}\n          />\n        </li>\n        {pages.map(renderPages)}\n        <li className={styles['Pagination__nextButtonContainer']}>\n          <Button\n            size=\"l\"\n            after={<Icon24ChevronCompactRight width={24} />}\n            appearance=\"accent\"\n            mode=\"tertiary\"\n            disabled={isLastPage || disabled}\n            aria-label={nextButtonAriaLabel}\n            onClick={handleNextClick}\n          />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n"],"names":["Pagination","getPageAriaLabelDefault","page","isCurrent","currentPage","siblingCount","boundaryCount","totalPages","disabled","getPageAriaLabel","prevButtonAriaLabel","nextButtonAriaLabel","getRootRef","onChange","resetProps","useAdaptivity","sizeY","pages","usePagination","isFirstPage","isLastPage","handlePrevClick","React","useCallback","handleClick","event","currentTarget","dataset","Number","handleNextClick","renderPages","li","key","Text","className","classNames","SizeType","COMPACT","Tappable","activeMode","hoverMode","hasActive","hasHover","focusVisibleMode","data-page","aria-current","undefined","aria-label","onClick","normalize","nav","role","ref","ul","Button","size","before","Icon24ChevronCompactLeft","width","appearance","mode","map","after","Icon24ChevronCompactRight"],"mappings":"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"}