{"version":3,"sources":["../../../../src/components/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useId } from '../../hooks/useId';\nimport { SizeType } from '../../lib/adaptivity';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { HasRootRef } from '../../types';\nimport { SegmentedControlOption } from './SegmentedControlOption/SegmentedControlOption';\nimport styles from './SegmentedControl.module.css';\n\nconst sizeYClassNames = {\n  none: styles['SegmentedControl--sizeY-none'],\n  [SizeType.REGULAR]: styles['SegmentedControl--sizeY-regular'],\n};\n\nexport type SegmentedControlValue = string | number | undefined;\n\nexport interface SegmentedControlOptionInterface\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'label'> {\n  label: React.ReactChild;\n  value: SegmentedControlValue;\n}\n\nexport interface SegmentedControlProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange'>,\n    HasRootRef<HTMLDivElement> {\n  options: SegmentedControlOptionInterface[];\n  size?: 'm' | 'l';\n  name?: string;\n  onChange?: (value: SegmentedControlValue) => void;\n  value?: SegmentedControlValue;\n  defaultValue?: SegmentedControlValue;\n}\n\nconst warn = warnOnce('SegmentedControl');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SegmentedControl\n */\nexport const SegmentedControl = ({\n  size = 'l',\n  name,\n  options,\n  getRootRef,\n  defaultValue = options[0]?.value,\n  children,\n  className,\n  onChange: onChangeProp,\n  value: valueProp,\n  ...restProps\n}: SegmentedControlProps) => {\n  const id = useId();\n\n  const [value, onChange] = useCustomEnsuredControl({\n    onChange: onChangeProp,\n    value: valueProp,\n    defaultValue,\n  });\n\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const actualIndex = options.findIndex((option) => option.value === value);\n\n  useIsomorphicLayoutEffect(() => {\n    if (actualIndex === -1 && process.env.NODE_ENV === 'development') {\n      warn('defaultValue: такого значения нет среди опций!', 'error');\n    }\n  }, [actualIndex]);\n\n  const translateX = `translateX(${100 * actualIndex}%)`;\n\n  return (\n    <div\n      {...restProps}\n      className={classNames(\n        styles['SegmentedControl'],\n        sizeY !== SizeType.COMPACT && sizeYClassNames[sizeY],\n        size === 'l' && styles['SegmentedControl--size-l'],\n        className,\n      )}\n      ref={getRootRef}\n    >\n      <div role=\"radiogroup\" className={styles['SegmentedControl__in']}>\n        {actualIndex > -1 && (\n          <div\n            aria-hidden\n            className={styles['SegmentedControl__slider']}\n            style={{\n              width: `${100 / options.length}%`,\n              transform: translateX,\n              WebkitTransform: translateX,\n            }}\n          />\n        )}\n        {options.map(({ label, className: optionClassName, ...optionProps }) => (\n          <SegmentedControlOption\n            key={`${optionProps.value}`}\n            {...optionProps}\n            className={classNames(styles['SegmentedControl__option'], optionClassName)}\n            name={name ?? id}\n            checked={value === optionProps.value}\n            onChange={() => onChange(optionProps.value)}\n          >\n            {label}\n          </SegmentedControlOption>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"names":["SegmentedControl","options","sizeYClassNames","none","SizeType","REGULAR","warn","warnOnce","size","name","getRootRef","defaultValue","value","children","className","onChange","onChangeProp","valueProp","restProps","id","useId","useCustomEnsuredControl","useAdaptivity","sizeY","actualIndex","findIndex","option","useIsomorphicLayoutEffect","process","env","NODE_ENV","translateX","div","classNames","COMPACT","ref","role","aria-hidden","style","width","length","transform","WebkitTransform","map","label","optionClassName","optionProps","SegmentedControlOption","key","checked"],"mappings":";;;;+BAyCaA;;;eAAAA;;;;;;;;;+DAzCU;oBACI;6BACG;iCACU;qBAClB;0BACG;yCACiB;wBACjB;sCAEc;IAqCtBC;AAlCjB,IAAMC;IACJC,IAAI;GACHC,oBAAQ,CAACC,OAAO;AAsBnB,IAAMC,OAAOC,IAAAA,kBAAQ,EAAC;AAKf,IAAMP,mBAAmB;6BAC9BQ,MAAAA,gCAAO,mBACPC,cAAAA,MACAR,iBAAAA,SACAS,oBAAAA,yCACAC,cAAAA,iDAAeV,YAAAA,OAAO,CAAC,EAAE,cAAVA,gCAAAA,UAAYW,KAAK,wBAChCC,kBAAAA,UACAC,mBAAAA,WACAC,AAAUC,sBAAVD,UACAH,AAAOK,mBAAPL,OACGM;QATHV;QACAC;QACAR;QACAS;QACAC;QACAE;QACAC;QACAC;QACAH;;IAGA,IAAMO,KAAKC,IAAAA,YAAK;IAEhB,IAA0BC,8CAAAA,IAAAA,0CAAuB,EAAC;QAChDN,UAAUC;QACVJ,OAAOK;QACPN,cAAAA;IACF,QAJOC,QAAmBS,6BAAZN,WAAYM;IAM1B,IAA2BC,kBAAAA,IAAAA,4BAAa,4BAAbA,gBAAnBC,OAAAA,0CAAQ;IAEhB,IAAMC,cAAcvB,QAAQwB,SAAS,CAAC,SAACC;eAAWA,OAAOd,KAAK,KAAKA;;IAEnEe,IAAAA,oDAAyB,EAAC;QACxB,IAAIH,gBAAgB,CAAC,KAAKI,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;YAChExB,KAAK,kDAAkD;QACzD;IACF,GAAG;QAACkB;KAAY;IAEhB,IAAMO,aAAa,AAAC,cAA+B,OAAlB,MAAMP,aAAY;IAEnD,qBACE,qBAACQ,mDACKd;QACJJ,WAAWmB,IAAAA,gBAAU,0BAEnBV,UAAUnB,oBAAQ,CAAC8B,OAAO,IAAIhC,eAAe,CAACqB,MAAM,EACpDf,SAAS,uCACTM;QAEFqB,KAAKzB;sBAEL,qBAACsB;QAAII,MAAK;QAAatB,SAAS;OAC7BU,cAAc,CAAC,mBACd,qBAACQ;QACCK,eAAAA;QACAvB,SAAS;QACTwB,OAAO;YACLC,OAAO,AAAC,GAAuB,OAArB,MAAMtC,QAAQuC,MAAM,EAAC;YAC/BC,WAAWV;YACXW,iBAAiBX;QACnB;QAGH9B,QAAQ0C,GAAG,CAAC;YAAGC,eAAAA,OAAO9B,AAAW+B,yBAAX/B,WAA+BgC;YAAtCF;YAAO9B;;eACrB,qBAACiC,8CAAsB;YACrBC,KAAK,AAAC,GAAoB,OAAlBF,YAAYlC,KAAK;WACrBkC;YACJhC,WAAWmB,IAAAA,gBAAU,kCAAqCY;YAC1DpC,MAAMA,iBAAAA,kBAAAA,OAAQU;YACd8B,SAASrC,UAAUkC,YAAYlC,KAAK;YACpCG,UAAU;uBAAMA,SAAS+B,YAAYlC,KAAK;;YAEzCgC;IACqB;AAKlC"}