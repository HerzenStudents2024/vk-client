{"version":3,"sources":["../../../src/hooks/useFocusWithin.ts"],"sourcesContent":["import React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\nexport function useFocusWithin(ref: React.RefObject<HTMLElement | null>): boolean {\n  const { document } = useDOM();\n  const isFocusWithin = () => {\n    if (!ref.current || !document) {\n      return false;\n    }\n\n    return ref.current.contains(document.activeElement);\n  };\n\n  const [focusWithin, setFocusWithin] = React.useState<boolean>(isFocusWithin);\n\n  const listener = () => {\n    const focus = isFocusWithin();\n    focus !== focusWithin && setFocusWithin(focus);\n  };\n\n  useGlobalEventListener(document, 'focus', listener, { capture: true });\n  useGlobalEventListener(document, 'blur', listener, { capture: true });\n\n  return focusWithin;\n}\n"],"names":["useFocusWithin","ref","document","useDOM","isFocusWithin","current","contains","activeElement","React","useState","focusWithin","setFocusWithin","listener","focus","useGlobalEventListener","capture"],"mappings":";;;;+BAIgBA;;;eAAAA;;;;;8DAJE;mBACK;sCACgB;AAEhC,SAASA,eAAeC,GAAwC;IACrE,IAAM,AAAEC,WAAaC,IAAAA,WAAM,IAAnBD;IACR,IAAME,gBAAgB;QACpB,IAAI,CAACH,IAAII,OAAO,IAAI,CAACH,UAAU;YAC7B,OAAO;QACT;QAEA,OAAOD,IAAII,OAAO,CAACC,QAAQ,CAACJ,SAASK,aAAa;IACpD;IAEA,IAAsCC,qCAAAA,cAAK,CAACC,QAAQ,CAAUL,oBAAvDM,cAA+BF,oBAAlBG,iBAAkBH;IAEtC,IAAMI,WAAW;QACf,IAAMC,QAAQT;QACdS,UAAUH,eAAeC,eAAeE;IAC1C;IAEAC,IAAAA,8CAAsB,EAACZ,UAAU,SAASU,UAAU;QAAEG,SAAS;IAAK;IACpED,IAAAA,8CAAsB,EAACZ,UAAU,QAAQU,UAAU;QAAEG,SAAS;IAAK;IAEnE,OAAOL;AACT"}