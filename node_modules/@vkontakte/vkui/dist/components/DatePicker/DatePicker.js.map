{"version":3,"sources":["../../../src/components/DatePicker/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, leadingZero } from '@vkontakte/vkjs';\nimport { range } from '../../helpers/range';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { Input } from '../Input/Input';\nimport styles from './DatePicker.module.css';\n\nconst DefaultMonths: string[] = [\n  'Января',\n  'Февраля',\n  'Марта',\n  'Апреля',\n  'Мая',\n  'Июня',\n  'Июля',\n  'Августа',\n  'Сентября',\n  'Октября',\n  'Ноября',\n  'Декабря',\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'defaultValue' | 'min' | 'max'> {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: 'top' | 'bottom';\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({ day = 0, month = 0, year = 0 }: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split('-');\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst DatePickerCustom = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  monthNames,\n  day = 0,\n  month = 0,\n  year = 0,\n  onDateChange,\n  disabled,\n  className,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange?.({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <div className={classNames(styles['DatePicker'], className)} {...restProps}>\n      <div className={styles['DatePicker__container']}>\n        <div className={styles['DatePicker__day']}>\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__month']}>\n          <CustomSelect\n            className={styles['DatePicker__monthSelect']}\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__year']}>\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input type=\"hidden\" name={name} value={convertToInputFormat({ day, month, year })} />\n    </div>\n  );\n};\n\nconst DatePickerNative = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  day,\n  month,\n  year,\n  onDateChange,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const defProps =\n    day && month && year ? { defaultValue: convertToInputFormat({ day, month, year }) } : {};\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onDateChange?.(parseInputDate(e.currentTarget.value));\n    },\n    [onDateChange],\n  );\n  return (\n    <Input\n      {...restProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n */\nexport const DatePicker = ({ defaultValue, ...props }: DatePickerProps) => {\n  const hasPointer = useAdaptivityHasPointer();\n  const [value, setValue] = React.useState<Partial<DatePickerDateFormat>>(() => ({\n    day: defaultValue?.day || 0,\n    month: defaultValue?.month || 0,\n    year: defaultValue?.year || 0,\n  }));\n\n  const onDateChange = React.useCallback(\n    (update: DatePickerDateFormat) => {\n      setValue(update);\n      props.onDateChange && props.onDateChange({ ...update });\n    },\n    [props],\n  );\n\n  const Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n"],"names":["React","classNames","leadingZero","range","useAdaptivityHasPointer","CustomSelect","Input","DefaultMonths","convertToInputFormat","day","month","year","parseInputDate","date","splited","split","Number","getMonthMaxDay","Date","getDate","DatePickerCustom","name","min","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","monthNames","onDateChange","disabled","className","restProps","onSelectChange","e","target","value","dayOptions","map","label","String","monthOptions","index","yearOptions","div","options","placeholder","onChange","input","type","DatePickerNative","defProps","onStringChange","useCallback","currentTarget","DatePicker","props","hasPointer","useState","setValue","update","Cmp"],"mappings":"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"}